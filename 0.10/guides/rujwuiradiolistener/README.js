Ext.data.JsonP.rujwuiradiolistener({"guide":"<h1 id='rujwuiradiolistener-section-jw.ui.radiolistener'>JW.UI.RadioListener</h1>\n\n<p>Это краткое описание класса на русском языке.</p>\n\n<p>Полная документация на английском: <a href=\"#!/api/JW.UI.RadioListener\" rel=\"JW.UI.RadioListener\" class=\"docClass\">JW.UI.RadioListener</a></p>\n\n<p>Наблюдает за изменением выбора в группе DOM радиокнопок и обновляет значение указанного строкового\n<a href=\"#!/guide/rujwproperty\">свойства</a>.\nТакже, применяется при инициализации.</p>\n\n<pre><code>var selected = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>();\nvar listener = new <a href=\"#!/api/JW.UI.RadioListener\" rel=\"JW.UI.RadioListener\" class=\"docClass\">JW.UI.RadioListener</a>($(\"#myform\"), \"myradio\", value);\n// Предположим, что изначально выбрана радиокнопка со значением \"apple\" атрибута \"value\"\nassertEquals(\"apple\", value.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n// Позже, пользователь выбрал радиокнопку \"banana\"\nassertEquals(\"banana\", value.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n</code></pre>\n\n<p>Обратите внимание, что объект привязывает обработчик события к элементу-контейнеру и использует механизм бабблинга\n(всплытия) для определения изменения выбора. Поэтому не следует прерывать бабблинг в дочерних элементах контейнера.\nУ всех радиокнопок должен быть одинаковый атрибут \"name\". Если ни одна радиокнопка не выбрана, значение\nсвойства сбрасывается в null.</p>\n\n<p>Для обратного биндинга используйте <a href=\"#!/guide/rujwuiradioupdater\">JW.UI.RadioUpdater</a>.</p>\n","title":"JW.UI.RadioListener"});