Ext.data.JsonP.JW_AbstractCollection_Counter({"tagname":"class","name":"JW.AbstractCollection.Counter","autodetected":{},"files":[{"filename":"counter.js","href":"counter2.html#JW-AbstractCollection-Counter"}],"extends":"JW.Class","members":[{"name":"filterItem","tagname":"cfg","owner":"JW.AbstractCollection.Counter","id":"cfg-filterItem","meta":{"required":true}},{"name":"scope","tagname":"cfg","owner":"JW.AbstractCollection.Counter","id":"cfg-scope","meta":{}},{"name":"target","tagname":"cfg","owner":"JW.AbstractCollection.Counter","id":"cfg-target","meta":{}},{"name":"_iid","tagname":"property","owner":"JW.Class","id":"property-_iid","meta":{}},{"name":"constructor","tagname":"property","owner":"JW.Class","id":"property-constructor","meta":{}},{"name":"source","tagname":"property","owner":"JW.AbstractCollection.Counter","id":"property-source","meta":{}},{"name":"target","tagname":"property","owner":"JW.AbstractCollection.Counter","id":"property-target","meta":{}},{"name":"constructor","tagname":"method","owner":"JW.AbstractCollection.Counter","id":"method-constructor","meta":{}},{"name":"_super","tagname":"method","owner":"JW.Class","id":"method-_super","meta":{}},{"name":"destroy","tagname":"method","owner":"JW.Class","id":"method-destroy","meta":{}},{"name":"destroyObject","tagname":"method","owner":"JW.Class","id":"method-destroyObject","meta":{}},{"name":"own","tagname":"method","owner":"JW.Class","id":"method-own","meta":{}},{"name":"reconfigure","tagname":"method","owner":"JW.AbstractCollection.Counter","id":"method-reconfigure","meta":{}},{"name":"recount","tagname":"method","owner":"JW.AbstractCollection.Counter","id":"method-recount","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-JW.AbstractCollection.Counter","short_doc":"&lt;T&gt;\n\nCounter for collection items which match the specified filter. ...","component":false,"superclasses":["JW.Class"],"subclasses":["JW.AbstractArray.Counter","JW.AbstractMap.Counter","JW.AbstractSet.Counter"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/JW.Class' rel='JW.Class' class='docClass'>JW.Class</a><div class='subclass '><strong>JW.AbstractCollection.Counter</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/JW.AbstractArray.Counter' rel='JW.AbstractArray.Counter' class='docClass'>JW.AbstractArray.Counter</a></div><div class='dependency'><a href='#!/api/JW.AbstractMap.Counter' rel='JW.AbstractMap.Counter' class='docClass'>JW.AbstractMap.Counter</a></div><div class='dependency'><a href='#!/api/JW.AbstractSet.Counter' rel='JW.AbstractSet.Counter' class='docClass'>JW.AbstractSet.Counter</a></div><h4>Files</h4><div class='dependency'><a href='source/counter2.html#JW-AbstractCollection-Counter' target='_blank'>counter.js</a></div></pre><div class='doc-contents'><p><code>&lt;T&gt;</code></p>\n\n<p>Counter for collection items which match the specified filter.\nBuilds new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>&lt;number&gt;, containing the number of items for which callback\nfunction returns !== <code>false</code>.\nIf original collection is observable, starts continuous synchronization.</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.ObservableArray\" rel=\"JW.ObservableArray\" class=\"docClass\">JW.ObservableArray</a>([1, 2, 3]);\nvar counter = source.<a href=\"#!/api/JW.AbstractCollection-method-createCounter\" rel=\"JW.AbstractCollection-method-createCounter\" class=\"docClass\">createCounter</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Counter-cfg-filterItem\" rel=\"JW.AbstractCollection.Counter-cfg-filterItem\" class=\"docClass\">filterItem</a>: function(x) { return x % 2 === 1; }\n});\nvar target = counter.<a href=\"#!/api/JW.AbstractCollection.Counter-property-target\" rel=\"JW.AbstractCollection.Counter-property-target\" class=\"docClass\">target</a>;\nassert(target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>() === 2); // 1, 3\n\nsource.<a href=\"#!/api/JW.AbstractArray-method-addAll\" rel=\"JW.AbstractArray-method-addAll\" class=\"docClass\">addAll</a>([4, 7, 1, 6]);\nassert(target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>() === 4); // 1, 3, 7, 1\n\ncounter.<a href=\"#!/api/JW.AbstractCollection.Counter-method-destroy\" rel=\"JW.AbstractCollection.Counter-method-destroy\" class=\"docClass\">destroy</a>();\n</code></pre>\n\n<p>Use <a href=\"#!/api/JW.AbstractCollection-method-createCounter\" rel=\"JW.AbstractCollection-method-createCounter\" class=\"docClass\">JW.AbstractCollection.createCounter</a> method to create the synchronizer.\nThe method will select which synchronizer implementation fits better (simple or observable).</p>\n\n<p>You can pass target property in config option:</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.ObservableSet\" rel=\"JW.ObservableSet\" class=\"docClass\">JW.ObservableSet</a>();\nvar target = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(0);\nvar counter = source.<a href=\"#!/api/JW.AbstractCollection-method-createCounter\" rel=\"JW.AbstractCollection-method-createCounter\" class=\"docClass\">createCounter</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Counter-cfg-target\" rel=\"JW.AbstractCollection.Counter-cfg-target\" class=\"docClass\">target</a>: target,\n    <a href=\"#!/api/JW.AbstractCollection.Counter-cfg-filterItem\" rel=\"JW.AbstractCollection.Counter-cfg-filterItem\" class=\"docClass\">filterItem</a>: this._filterItem,\n    <a href=\"#!/api/JW.AbstractCollection.Counter-cfg-scope\" rel=\"JW.AbstractCollection.Counter-cfg-scope\" class=\"docClass\">scope</a>: this\n});\n</code></pre>\n\n<p>In simple cases, <a href=\"#!/api/JW.AbstractCollection-method-S-S-count\" rel=\"JW.AbstractCollection-method-S-S-count\" class=\"docClass\">JW.AbstractCollection.$$count</a> shorthand can be used instead. It returns the target property right away:</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.ObservableArray\" rel=\"JW.ObservableArray\" class=\"docClass\">JW.ObservableArray</a>([1, 2, 3]);\nvar target = source.<a href=\"#!/api/JW.AbstractCollection-method-S-S-count\" rel=\"JW.AbstractCollection-method-S-S-count\" class=\"docClass\">$$count</a>(function(x) { return x % 2 === 1; });\nassert(target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>() === 2); // 1, 3\n\nsource.<a href=\"#!/api/JW.AbstractArray-method-addAll\" rel=\"JW.AbstractArray-method-addAll\" class=\"docClass\">addAll</a>([4, 7, 1, 6]);\nassert(target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>() === 4); // 1, 3, 7, 1\n\ntarget.<a href=\"#!/api/JW.Property-method-destroy\" rel=\"JW.Property-method-destroy\" class=\"docClass\">destroy</a>();\n</code></pre>\n\n<p>You may use <a href=\"#!/api/JW.AbstractCollection.Filterer\" rel=\"JW.AbstractCollection.Filterer\" class=\"docClass\">JW.AbstractCollection.Filterer</a> instead of counter, but counter works much\nfaster because it doesn't create a filtered collection.</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.ObservableArray\" rel=\"JW.ObservableArray\" class=\"docClass\">JW.ObservableArray</a>();\n\n// via filterer\nvar filterer = source.<a href=\"#!/api/JW.AbstractCollection-method-createFilterer\" rel=\"JW.AbstractCollection-method-createFilterer\" class=\"docClass\">createFilterer</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Filterer-cfg-filterItem\" rel=\"JW.AbstractCollection.Filterer-cfg-filterItem\" class=\"docClass\">filterItem</a>: this._filterItem,\n    <a href=\"#!/api/JW.AbstractCollection.Filterer-cfg-scope\" rel=\"JW.AbstractCollection.Filterer-cfg-scope\" class=\"docClass\">scope</a>: this\n});\nvar count = filterer.<a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.ObservableArray-property-length\" rel=\"JW.ObservableArray-property-length\" class=\"docClass\">length</a>; // <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>&lt;number&gt;\n\n// via counter, works faster\nvar counter = source.<a href=\"#!/api/JW.AbstractCollection-method-createCounter\" rel=\"JW.AbstractCollection-method-createCounter\" class=\"docClass\">createCounter</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Counter-cfg-filterItem\" rel=\"JW.AbstractCollection.Counter-cfg-filterItem\" class=\"docClass\">filterItem</a>: this._filterItem,\n    <a href=\"#!/api/JW.AbstractCollection.Counter-cfg-scope\" rel=\"JW.AbstractCollection.Counter-cfg-scope\" class=\"docClass\">scope</a>: this\n});\nvar count = counter.<a href=\"#!/api/JW.AbstractCollection.Counter-property-target\" rel=\"JW.AbstractCollection.Counter-property-target\" class=\"docClass\">target</a>; // <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>&lt;number&gt;\n</code></pre>\n\n<p>Counter works correctly for observable collections only.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Required config options</h3><div id='cfg-filterItem' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Counter'>JW.AbstractCollection.Counter</span><br/><a href='source/counter2.html#JW-AbstractCollection-Counter-cfg-filterItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Counter-cfg-filterItem' class='name expandable'>filterItem</a> : Function<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>filterItem(item: T): boolean\n\nFiltering function. ...</div><div class='long'><p><code>filterItem(item: T): boolean</code></p>\n\n<p>Filtering function. Target property will count an item if filtering function\nreturns !== <code>false</code> for this item.</p>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Optional config options</h3><div id='cfg-scope' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Counter'>JW.AbstractCollection.Counter</span><br/><a href='source/counter2.html#JW-AbstractCollection-Counter-cfg-scope' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Counter-cfg-scope' class='name expandable'>scope</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p><a href=\"#!/api/JW.AbstractCollection.Counter-cfg-filterItem\" rel=\"JW.AbstractCollection.Counter-cfg-filterItem\" class=\"docClass\">filterItem</a> call scope.</p>\n</div><div class='long'><p><a href=\"#!/api/JW.AbstractCollection.Counter-cfg-filterItem\" rel=\"JW.AbstractCollection.Counter-cfg-filterItem\" class=\"docClass\">filterItem</a> call scope.</p>\n</div></div></div><div id='cfg-target' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Counter'>JW.AbstractCollection.Counter</span><br/><a href='source/counter2.html#JW-AbstractCollection-Counter-cfg-target' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Counter-cfg-target' class='name expandable'>target</a> : <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p><code>&lt;number&gt;</code> Target property.</p>\n</div><div class='long'><p><code>&lt;number&gt;</code> Target property.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-_iid' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-property-_iid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-_iid' class='name expandable'>_iid</a> : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Instance ID. ...</div><div class='long'><p>Instance ID.</p>\n\n<p>Auto-incremental object unique ID. Each <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> instance gets such identifier.\nUsed in <a href=\"#!/api/JW.AbstractSet\" rel=\"JW.AbstractSet\" class=\"docClass\">JW.AbstractSet</a> as map key for quick item access.</p>\n</div></div></div><div id='property-constructor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-property-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-constructor' class='name expandable'>constructor</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructor as class. ...</div><div class='long'><p>Constructor as class. If you have an object, you can get its class using this field.</p>\n</div></div></div><div id='property-source' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Counter'>JW.AbstractCollection.Counter</span><br/><a href='source/counter2.html#JW-AbstractCollection-Counter-property-source' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Counter-property-source' class='name expandable'>source</a> : <a href=\"#!/api/JW.AbstractCollection\" rel=\"JW.AbstractCollection\" class=\"docClass\">JW.AbstractCollection</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p><code>&lt;T&gt;</code> Source collection.</p>\n</div><div class='long'><p><code>&lt;T&gt;</code> Source collection.</p>\n</div></div></div><div id='property-target' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Counter'>JW.AbstractCollection.Counter</span><br/><a href='source/counter2.html#JW-AbstractCollection-Counter-property-target' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Counter-property-target' class='name expandable'>target</a> : <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p><code>&lt;number&gt;</code> Target property.</p>\n</div><div class='long'><p><code>&lt;number&gt;</code> Target property.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Counter'>JW.AbstractCollection.Counter</span><br/><a href='source/counter2.html#JW-AbstractCollection-Counter-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/JW.AbstractCollection.Counter-method-constructor' class='name expandable'>JW.AbstractCollection.Counter</a>( <span class='pre'>source, config</span> ) : <a href=\"#!/api/JW.AbstractCollection.Counter\" rel=\"JW.AbstractCollection.Counter\" class=\"docClass\">JW.AbstractCollection.Counter</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates synchronizer. ...</div><div class='long'><p>Creates synchronizer. <a href=\"#!/api/JW.AbstractCollection-method-createCounter\" rel=\"JW.AbstractCollection-method-createCounter\" class=\"docClass\">JW.AbstractCollection.createCounter</a> method is preferrable instead.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : <a href=\"#!/api/JW.AbstractCollection\" rel=\"JW.AbstractCollection\" class=\"docClass\">JW.AbstractCollection</a><div class='sub-desc'><p><code>&lt;T&gt;</code> Source collection.</p>\n</div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>Configuration (see Config options).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.AbstractCollection.Counter\" rel=\"JW.AbstractCollection.Counter\" class=\"docClass\">JW.AbstractCollection.Counter</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_super' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-_super' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-_super' class='name expandable'>_super</a>( <span class='pre'></span> ) : Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is available only inside class methods that were passed into JW.extend method. ...</div><div class='long'><p>This method is available only inside class methods that were passed into <a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a> method.\nThis method is an easy way of the same superclass method calling:</p>\n\n<pre><code>...\n// Class method\nmyMethod: function(a, b, c) {\n    return this.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>(a, b) + c;\n}\n...\n</code></pre>\n\n<p>Equivalent code without <a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a> usage:</p>\n\n<pre><code>...\n// Class method\nmyMethod: function(a, b, c) {\n    return MyClass.<a href=\"#!/api/JW.Class-static-property-superclass\" rel=\"JW.Class-static-property-superclass\" class=\"docClass\">superclass</a>.myMethod.call(this, a, b) + c;\n}\n...\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Class destructor invocation method. ...</div><div class='long'><p>Class destructor invocation method. Destroys all aggregated objects and calls <a href=\"#!/api/JW.Class-method-destroyObject\" rel=\"JW.Class-method-destroyObject\" class=\"docClass\">destroyObject</a> method.\nYou must call this method explicitly from outside, because JavaScript doesn't support automatic class destructor\ncalling. Alternatively (and optimally), you should use method <a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a> to aggregate this object inside some another.</p>\n\n<pre><code>var object = new MyClass();\n\n// ...\n\n// Once object is not needed anymore, destroy it\nobject.<a href=\"#!/api/JW.Class-method-destroy\" rel=\"JW.Class-method-destroy\" class=\"docClass\">destroy</a>();\n</code></pre>\n\n<p>You can override this method in a subclass to do some preliminary work before aggregated objects destruction.\nFor example, <a href=\"#!/api/JW.UI.Component\" rel=\"JW.UI.Component\" class=\"docClass\">JW.UI.Component</a> overrides this method to remove child components before their destruction,\nbefore child components are usually aggregated inside the component.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroyObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-destroyObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-destroyObject' class='name expandable'>destroyObject</a>( <span class='pre'></span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Class destructor implementation. ...</div><div class='long'><p>Class destructor implementation. Called inside <a href=\"#!/api/JW.Class-method-destroy\" rel=\"JW.Class-method-destroy\" class=\"docClass\">destroy</a> method after aggregated objects destruction.\nThe logic of class instance destruction should be implemented here. If you override this method,\ndon't forget to call superclass destructor at the end of the method:</p>\n\n<pre><code>destroyObject: function() {\n    // Release resources\n    ...\n    // Call superclass destructor\n    this.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>();\n}\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-own' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-own' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-own' class='name expandable'>own</a>( <span class='pre'>obj</span> ) : <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Aggregate a specified object in a current one. ...</div><div class='long'><p>Aggregate a specified object in a current one. It means that the specified object will be destroyed automatically\non this object destruction. The aggregated objects are destroyed in a reversive order.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a><div class='sub-desc'><p>An aggregated object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a></span><div class='sub-desc'><p>An aggregated object (obj).</p>\n</div></li></ul></div></div></div><div id='method-reconfigure' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Counter'>JW.AbstractCollection.Counter</span><br/><a href='source/counter2.html#JW-AbstractCollection-Counter-method-reconfigure' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Counter-method-reconfigure' class='name expandable'>reconfigure</a>( <span class='pre'>config</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes counter configuration and recounts matching items. ...</div><div class='long'><p>Changes counter configuration and recounts matching items. Accepts next\noptions: <a href=\"#!/api/JW.AbstractCollection.Counter-cfg-filterItem\" rel=\"JW.AbstractCollection.Counter-cfg-filterItem\" class=\"docClass\">filterItem</a>, <a href=\"#!/api/JW.AbstractCollection.Counter-cfg-scope\" rel=\"JW.AbstractCollection.Counter-cfg-scope\" class=\"docClass\">scope</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>Configuration.</p>\n</div></li></ul></div></div></div><div id='method-recount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Counter'>JW.AbstractCollection.Counter</span><br/><a href='source/counter2.html#JW-AbstractCollection-Counter-method-recount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Counter-method-recount' class='name expandable'>recount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Recounts matching items. ...</div><div class='long'><p>Recounts matching items. Call this method when collection items properties change the way that\nthey must be refiltered.</p>\n</div></div></div></div></div></div></div>","meta":{}});