Ext.data.JsonP.rujwuicheckedlistener({"guide":"<h1 id='rujwuicheckedlistener-section-jw.ui.checkedlistener'>JW.UI.CheckedListener</h1>\n\n<p>Это краткое описание класса на русском языке.</p>\n\n<p>Полная документация на английском: <a href=\"#!/api/JW.UI.CheckedListener\" rel=\"JW.UI.CheckedListener\" class=\"docClass\">JW.UI.CheckedListener</a></p>\n\n<p>Наблюдает за изменением выбора DOM чекбокса и обновляет значение указанного булевого <a href=\"#!/guide/rujwproperty\">свойства</a>.\nТакже, применяется при инициализации.</p>\n\n<pre><code>var listener = new <a href=\"#!/api/JW.UI.CheckedListener\" rel=\"JW.UI.CheckedListener\" class=\"docClass\">JW.UI.CheckedListener</a>($(\"#mycheckbox\"));\nvar checked = listener.<a href=\"#!/api/JW.UI.CheckedListener-property-target\" rel=\"JW.UI.CheckedListener-property-target\" class=\"docClass\">target</a>;\n// Предположим, что чекбокс изначально не выбран\nassertEquals(false, value.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n// Позже, пользователь выбрал чекбокс\nassertEquals(true, value.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n</code></pre>\n\n<p>Для обратного биндинга, используйте <a href=\"#!/guide/rujwuipropupdater\">JW.UI.PropUpdater</a>, передав \"checked\" в качестве значения аргумента \"prop\".</p>\n","title":"JW.UI.CheckedListener"});