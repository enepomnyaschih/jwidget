Ext.data.JsonP.JW_Plugins_Locale({"tagname":"class","name":"JW.Plugins.Locale","autodetected":{},"files":[{"filename":"locale.js","href":"locale.html#JW-Plugins-Locale"}],"extends":"JW.Class","members":[{"name":"_iid","tagname":"property","owner":"JW.Class","id":"property-_iid","meta":{}},{"name":"constructor","tagname":"property","owner":"JW.Class","id":"property-constructor","meta":{}},{"name":"data","tagname":"property","owner":"JW.Plugins.Locale","id":"property-data","meta":{}},{"name":"lang","tagname":"property","owner":"JW.Plugins.Locale","id":"property-lang","meta":{}},{"name":"constructor","tagname":"method","owner":"JW.Plugins.Locale","id":"method-constructor","meta":{}},{"name":"_super","tagname":"method","owner":"JW.Class","id":"method-_super","meta":{}},{"name":"destroy","tagname":"method","owner":"JW.Class","id":"method-destroy","meta":{}},{"name":"expandTemplate","tagname":"method","owner":"JW.Plugins.Locale","id":"method-expandTemplate","meta":{}},{"name":"getFunctor","tagname":"method","owner":"JW.Plugins.Locale","id":"method-getFunctor","meta":{}},{"name":"getLanguages","tagname":"method","owner":"JW.Plugins.Locale","id":"method-getLanguages","meta":{}},{"name":"getString","tagname":"method","owner":"JW.Plugins.Locale","id":"method-getString","meta":{}},{"name":"getSubLocale","tagname":"method","owner":"JW.Plugins.Locale","id":"method-getSubLocale","meta":{}},{"name":"getTemplateFunctor","tagname":"method","owner":"JW.Plugins.Locale","id":"method-getTemplateFunctor","meta":{}},{"name":"own","tagname":"method","owner":"JW.Class","id":"method-own","meta":{}},{"name":"formatDate","tagname":"method","owner":"JW.Plugins.Locale","id":"static-method-formatDate","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-JW.Plugins.Locale","short_doc":"Application localization management class. ...","component":false,"superclasses":["JW.Class"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/JW.Class' rel='JW.Class' class='docClass'>JW.Class</a><div class='subclass '><strong>JW.Plugins.Locale</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/locale.html#JW-Plugins-Locale' target='_blank'>locale.js</a></div></pre><div class='doc-contents'><p>Application localization management class.</p>\n\n<h2>Definition of a problem</h2>\n\n<p>Assume that you have the next localization dictionary:</p>\n\n<pre><code>var dictionary = {\n    en: {\n        _lang: \"English\",\n        name: \"Name\",\n        submit: \"Submit\",\n        equipment: {\n            monitor: \"Monitor\",\n            keyboard: \"Keyboard\",\n            mouse: \"Mouse\"\n        },\n        monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    },\n    ru: {\n        _lang: \"Русский\",\n        name: \"Имя\",\n        submit: \"Отправить\",\n        equipment: {\n            monitor: \"Монитор\",\n            keyboard: \"Клавиатура\",\n            mouse: \"Мышь\"\n        },\n        monthsShort: [\"Янв\", \"Фев\", \"Мар\", \"Апр\", \"Мая\", \"Июн\",\n                      \"Июл\", \"Авг\", \"Сен\", \"Окт\", \"Ноя\", \"Дек\"]\n    }\n};\n</code></pre>\n\n<p>You need to implement a component for dynamic switching of application localization without page refreshing.\nIt is easy thanks to <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>. It is based on <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>.</p>\n\n<iframe style=\"border: 1px solid green; padding: 10px;\" width=\"400\" height=\"140\" src=\"http://enepomnyaschih.github.io/mt/1.0.0/locale.html\"></iframe>\n\n\n<p>Source code of the example is not minified so you can review it using \"View source code of the frame\" context\nmenu item in your browser.</p>\n\n<h2>getString method</h2>\n\n<p>You can get a specified string in a current or specified locale using <a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a> method.</p>\n\n<pre><code>// ... define the dictionary\n\nfunction assert(x) {\n    if (!x) {\n        throw \"Assertion failed\";\n    }\n}\n\n$(function() {\n    var lang = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\n    var locale = new <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>(dictionary, lang);\n    assert(\"Name\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>(\"name\"));\n    assert(\"Monitor\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>(\"equipment.monitor\"));\n    assert(\"Feb\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>([\"monthsShort\", 1]));\n\n    lang.<a href=\"#!/api/JW.Property-method-set\" rel=\"JW.Property-method-set\" class=\"docClass\">set</a>(\"ru\");\n    assert(\"Имя\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>(\"name\"));\n    assert(\"Монитор\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>(\"equipment.monitor\"));\n    assert(\"Фев\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>([\"monthsShort\", 1]));\n\n    assert(\"English\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>(\"en\", \"_lang\"));\n    assert(\"Русский\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>(\"ru\", \"_lang\"));\n});\n</code></pre>\n\n<h2>getFunctor method</h2>\n\n<p>If you need to switch the application locale dynamically, <a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a> method is not enough.\nLet's try <a href=\"#!/api/JW.Plugins.Locale-method-getFunctor\" rel=\"JW.Plugins.Locale-method-getFunctor\" class=\"docClass\">getFunctor</a> method which builds a new instance of <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a> containing\na specified string in a current locale. The function will update the string automatically when user selects another locale.</p>\n\n<pre><code>$(function() {\n    var lang = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\n    var locale = new <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>(dictionary, lang);\n\n    var submitFunctor = locale.<a href=\"#!/api/JW.Plugins.Locale-method-getFunctor\" rel=\"JW.Plugins.Locale-method-getFunctor\" class=\"docClass\">getFunctor</a>(\"submit\");\n    assert(\"Submit\" === submitFunctor.<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n\n    lang.<a href=\"#!/api/JW.Property-method-set\" rel=\"JW.Property-method-set\" class=\"docClass\">set</a>(\"ru\");\n    assert(\"Отправить\" === submitFunctor.<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n\n    submitFunctor.<a href=\"#!/api/JW.Functor-method-destroy\" rel=\"JW.Functor-method-destroy\" class=\"docClass\">destroy</a>(); // destroy the functor since it is no more in use\n});\n</code></pre>\n\n<h2>getFunctor method usage in the components</h2>\n\n<p>Assume that you need to output a \"name\" string as a label inside a form, and \"submit\" string as a\nsubmit button caption. Let's use <a href=\"#!/api/JW.UI.TextUpdater\" rel=\"JW.UI.TextUpdater\" class=\"docClass\">JW.UI.TextUpdater</a> and <a href=\"#!/api/JW.UI.ValueUpdater\" rel=\"JW.UI.ValueUpdater\" class=\"docClass\">JW.UI.ValueUpdater</a> helpers.</p>\n\n<pre><code>var Form = function(locale) {\n    Form.<a href=\"#!/api/JW.Class-static-property-_super\" rel=\"JW.Class-static-property-_super\" class=\"docClass\">_super</a>.call(this);\n    this.locale = locale; // <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(Form, <a href=\"#!/api/JW.UI.Component\" rel=\"JW.UI.Component\" class=\"docClass\">JW.UI.Component</a>, {\n    renderNameLabel: function(el) {\n        var text = this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(this.locale.<a href=\"#!/api/JW.Plugins.Locale-method-getFunctor\" rel=\"JW.Plugins.Locale-method-getFunctor\" class=\"docClass\">getFunctor</a>(\"name\")).<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>;\n        this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.UI.TextUpdater\" rel=\"JW.UI.TextUpdater\" class=\"docClass\">JW.UI.TextUpdater</a>(el, text));\n    },\n\n    renderSubmit: function(el) {\n        var text = this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(this.locale.<a href=\"#!/api/JW.Plugins.Locale-method-getFunctor\" rel=\"JW.Plugins.Locale-method-getFunctor\" class=\"docClass\">getFunctor</a>(\"submit\")).<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>;\n        this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.UI.ValueUpdater\" rel=\"JW.UI.ValueUpdater\" class=\"docClass\">JW.UI.ValueUpdater</a>(el, text));\n    }\n});\n\n<a href=\"#!/api/JW.UI-static-method-template\" rel=\"JW.UI-static-method-template\" class=\"docClass\">JW.UI.template</a>(Form, {\n    main:\n        '&lt;form&gt;' +\n            '&lt;label&gt;&lt;span jwid=\"name-label\"&gt;&lt;/span&gt;&lt;input type=\"text\"&gt;&lt;/label&gt;' +\n            '&lt;input jwid=\"submit\" type=\"submit\"&gt;' +\n        '&lt;/form&gt;'\n});\n</code></pre>\n\n<p>Test the form.</p>\n\n<pre><code>$(function() {\n    var lang = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\n    var locale = new <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>(dictionary, lang);\n\n    var form = new Form(locale).<a href=\"#!/api/JW.UI.Component-method-renderTo\" rel=\"JW.UI.Component-method-renderTo\" class=\"docClass\">renderTo</a>(\"body\");\n\n    // In 2 seconds, switch to Russian locale\n    setTimeout(function() { lang.<a href=\"#!/api/JW.Property-method-set\" rel=\"JW.Property-method-set\" class=\"docClass\">set</a>(\"ru\"); }, 2000);\n});\n</code></pre>\n\n<h2>Locale switch component</h2>\n\n<p>We need a nice component for localization switching. Let's render it as a set of radios with\n<a href=\"#!/api/JW.UI.RadioUpdater\" rel=\"JW.UI.RadioUpdater\" class=\"docClass\">JW.UI.RadioUpdater</a> and <a href=\"#!/api/JW.UI.RadioListener\" rel=\"JW.UI.RadioListener\" class=\"docClass\">JW.UI.RadioListener</a> helpers bound to them.</p>\n\n<pre><code>var LocaleSwitch = function(locale) {\n    LocaleSwitch.<a href=\"#!/api/JW.Class-static-property-_super\" rel=\"JW.Class-static-property-_super\" class=\"docClass\">_super</a>.call(this);\n    this.locale = locale; // <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(LocaleSwitch, <a href=\"#!/api/JW.UI.Component\" rel=\"JW.UI.Component\" class=\"docClass\">JW.UI.Component</a>, {\n    renderRoot: function() {\n        return <a href=\"#!/api/JW.Array-method-S-map\" rel=\"JW.Array-method-S-map\" class=\"docClass\">JW.Array.$map</a>(this.locale.getLanguages(), function(lang) {\n            return this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new LocaleSwitchItem(this.locale, lang));\n        }, this);\n    },\n\n    afterRender: function() {\n        this.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>();\n        this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.UI.RadioUpdater\" rel=\"JW.UI.RadioUpdater\" class=\"docClass\">JW.UI.RadioUpdater</a>(this.<a href=\"#!/api/JW.UI.Component-property-el\" rel=\"JW.UI.Component-property-el\" class=\"docClass\">el</a>, \"lang\", this.locale.<a href=\"#!/api/JW.Plugins.Locale-property-lang\" rel=\"JW.Plugins.Locale-property-lang\" class=\"docClass\">lang</a>));\n        this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.UI.RadioListener\" rel=\"JW.UI.RadioListener\" class=\"docClass\">JW.UI.RadioListener</a>(this.<a href=\"#!/api/JW.UI.Component-property-el\" rel=\"JW.UI.Component-property-el\" class=\"docClass\">el</a>, \"lang\", this.locale.<a href=\"#!/api/JW.Plugins.Locale-property-lang\" rel=\"JW.Plugins.Locale-property-lang\" class=\"docClass\">lang</a>));\n    }\n});\n\n<a href=\"#!/api/JW.UI-static-method-template\" rel=\"JW.UI-static-method-template\" class=\"docClass\">JW.UI.template</a>(LocaleSwitch, {\n    main: '&lt;form&gt;&lt;/form&gt;'\n});\n\n//--------\n\nvar LocaleSwitchItem = function(locale, lang) {\n    LocaleSwitchItem.<a href=\"#!/api/JW.Class-static-property-_super\" rel=\"JW.Class-static-property-_super\" class=\"docClass\">_super</a>.call(this);\n    this.locale = locale; // <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>\n    this.lang = lang; // string\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(LocaleSwitchItem, <a href=\"#!/api/JW.UI.Component\" rel=\"JW.UI.Component\" class=\"docClass\">JW.UI.Component</a>, {\n    renderInput: function(el) {\n        el.attr(\"value\", this.lang);\n    },\n\n    renderLabel: function(el) {\n        el.text(this.locale.<a href=\"#!/api/JW.Plugins.Locale-method-getString\" rel=\"JW.Plugins.Locale-method-getString\" class=\"docClass\">getString</a>(this.lang, \"_lang\"));\n    }\n});\n\n<a href=\"#!/api/JW.UI-static-method-template\" rel=\"JW.UI-static-method-template\" class=\"docClass\">JW.UI.template</a>(LocaleSwitchItem, {\n    main:\n        '&lt;div&gt;&lt;label&gt;' +\n            '&lt;input type=\"radio\" name=\"lang\" jwid=\"input\"&gt;&lt;span jwid=\"label\"&gt;&lt;/span&gt;' +\n        '&lt;/label&gt;&lt;/div&gt;'\n});\n</code></pre>\n\n<p>Test.</p>\n\n<pre><code>$(function() {\n    var lang = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\n    var locale = new <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>(dictionary, lang);\n    var switcher = new LocaleSwitch(locale).<a href=\"#!/api/JW.UI.Component-method-renderTo\" rel=\"JW.UI.Component-method-renderTo\" class=\"docClass\">renderTo</a>(\"body\");\n});\n</code></pre>\n\n<h2>Child localization (getSubLocale method)</h2>\n\n<p>Let's look at one more way to simplify localization management. Sometimes a component needs just an isolated part\nof dictionary (e.g. strings in \"equipment\" object). To make access keys shorter, let's create child\nlocalization object.</p>\n\n<pre><code>var EquipmentSelector = function(locale) {\n    EquipmentSelector.<a href=\"#!/api/JW.Class-static-property-_super\" rel=\"JW.Class-static-property-_super\" class=\"docClass\">_super</a>.call(this);\n    this.locale = locale; // <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>, child localization object\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(EquipmentSelector, <a href=\"#!/api/JW.UI.Component\" rel=\"JW.UI.Component\" class=\"docClass\">JW.UI.Component</a>, {\n    renderMonitor: function(el) {\n        var text = this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(this.locale.<a href=\"#!/api/JW.Plugins.Locale-method-getFunctor\" rel=\"JW.Plugins.Locale-method-getFunctor\" class=\"docClass\">getFunctor</a>(\"monitor\")).<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>;\n        this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.UI.TextUpdater\" rel=\"JW.UI.TextUpdater\" class=\"docClass\">JW.UI.TextUpdater</a>(el, text));\n    },\n\n    renderKeyboard: function(el) {\n        var text = this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(this.locale.<a href=\"#!/api/JW.Plugins.Locale-method-getFunctor\" rel=\"JW.Plugins.Locale-method-getFunctor\" class=\"docClass\">getFunctor</a>(\"keyboard\")).<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>;\n        this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.UI.TextUpdater\" rel=\"JW.UI.TextUpdater\" class=\"docClass\">JW.UI.TextUpdater</a>(el, text));\n    },\n\n    renderMouse: function(el) {\n        var text = this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(this.locale.<a href=\"#!/api/JW.Plugins.Locale-method-getFunctor\" rel=\"JW.Plugins.Locale-method-getFunctor\" class=\"docClass\">getFunctor</a>(\"mouse\")).<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>;\n        this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.UI.TextUpdater\" rel=\"JW.UI.TextUpdater\" class=\"docClass\">JW.UI.TextUpdater</a>(el, text));\n    }\n});\n\n<a href=\"#!/api/JW.UI-static-method-template\" rel=\"JW.UI-static-method-template\" class=\"docClass\">JW.UI.template</a>(EquipmentSelector, {\n    main:\n        '&lt;form&gt;' +\n            '&lt;button jwid=\"monitor\"&gt;&lt;/button&gt;' +\n            '&lt;button jwid=\"keyboard\"&gt;&lt;/button&gt;' +\n            '&lt;button jwid=\"mouse\"&gt;&lt;/button&gt;' +\n        '&lt;/form&gt;'\n});\n</code></pre>\n\n<p>Let's use <a href=\"#!/api/JW.Plugins.Locale-method-getSubLocale\" rel=\"JW.Plugins.Locale-method-getSubLocale\" class=\"docClass\">getSubLocale</a> method to build the required child localization object.</p>\n\n<pre><code>$(function() {\n    var lang = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\n    var locale = new <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>(dictionary, lang);\n    var equipmentLocale = locale.<a href=\"#!/api/JW.Plugins.Locale-method-getSubLocale\" rel=\"JW.Plugins.Locale-method-getSubLocale\" class=\"docClass\">getSubLocale</a>(\"equipment\");\n    var equipmentSelector = new EquipmentSelector(equipmentLocale).<a href=\"#!/api/JW.UI.Component-method-renderTo\" rel=\"JW.UI.Component-method-renderTo\" class=\"docClass\">renderTo</a>(\"body\");\n});\n</code></pre>\n\n<p>As you can see, we can use shorter keys inside EquipmentSelector component now:</p>\n\n<ul>\n<li>\"monitor\", not \"equipment.monitor\"</li>\n<li>\"keyboard\", not \"equipment.keyboard\"</li>\n<li>\"mouse\", not \"equipment.mouse\"</li>\n</ul>\n\n\n<h2>Localization by template (expandTemplate and getTemplateFunctor methods)</h2>\n\n<p>It is quite challenging to format the dates sometimes. First, date string is formatted by mask (e.g., \"mmm'yy\").\nSecond, date string depends on current localization (\"Jan\" or \"Янв\"). Let's use template formatting method\nto format the dates.</p>\n\n<pre><code>$(function() {\n    var lang = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\n    var locale = new <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>(dictionary, lang);\n    assert(\"Jan'10\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-expandTemplate\" rel=\"JW.Plugins.Locale-method-expandTemplate\" class=\"docClass\">expandTemplate</a>(\"${monthsShort.0}'10\");\n});\n</code></pre>\n\n<p><a href=\"#!/api/JW.Plugins.Locale-static-method-formatDate\" rel=\"JW.Plugins.Locale-static-method-formatDate\" class=\"docClass\">JW.Plugins.Locale.formatDate</a> method allows you to build an appropriate date formatting template by mask.</p>\n\n<pre><code>$(function() {\n    var lang = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\n    var locale = new <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>(dictionary, lang);\n    var date = new Date(2010, 0, 1);\n    var format = <a href=\"#!/api/JW.Plugins.Locale-static-method-formatDate\" rel=\"JW.Plugins.Locale-static-method-formatDate\" class=\"docClass\">JW.Plugins.Locale.formatDate</a>(date, \"mmm'yy\");\n    assert(\"Jan'10\" === locale.<a href=\"#!/api/JW.Plugins.Locale-method-expandTemplate\" rel=\"JW.Plugins.Locale-method-expandTemplate\" class=\"docClass\">expandTemplate</a>(format);\n});\n</code></pre>\n\n<p>Method <a href=\"#!/api/JW.Plugins.Locale-method-getTemplateFunctor\" rel=\"JW.Plugins.Locale-method-getTemplateFunctor\" class=\"docClass\">getTemplateFunctor</a> allows you to start dynamic date\nreformatting on localization change.</p>\n\n<pre><code>$(function() {\n    var lang = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\n    var locale = new <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a>(dictionary, lang);\n\n    var date = new Date(2010, 0, 1);\n    var format = <a href=\"#!/api/JW.Plugins.Locale-static-method-formatDate\" rel=\"JW.Plugins.Locale-static-method-formatDate\" class=\"docClass\">JW.Plugins.Locale.formatDate</a>(date, \"mmm'yy\");\n    var dateFunctor = locale.<a href=\"#!/api/JW.Plugins.Locale-method-getTemplateFunctor\" rel=\"JW.Plugins.Locale-method-getTemplateFunctor\" class=\"docClass\">getTemplateFunctor</a>(format);\n    assert(\"Jan'10\" === dateFunctor.<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n\n    lang.<a href=\"#!/api/JW.Property-method-set\" rel=\"JW.Property-method-set\" class=\"docClass\">set</a>(\"ru\");\n    assert(\"Янв'10\" === dateFunctor.<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n\n    dateFunctor.<a href=\"#!/api/JW.Functor-method-destroy\" rel=\"JW.Functor-method-destroy\" class=\"docClass\">destroy</a>();\n});\n</code></pre>\n\n<p>Just as in previous examples, you can now easily bind text inside any DOM-element to dateFunctor.<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-_iid' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-property-_iid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-_iid' class='name expandable'>_iid</a> : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Instance ID. ...</div><div class='long'><p>Instance ID.</p>\n\n<p>Auto-incremental object unique ID. Each <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> instance gets such identifier.\nUsed in <a href=\"#!/api/JW.AbstractSet\" rel=\"JW.AbstractSet\" class=\"docClass\">JW.AbstractSet</a> as map key for quick item access.</p>\n</div></div></div><div id='property-constructor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-property-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-constructor' class='name expandable'>constructor</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructor as class. ...</div><div class='long'><p>Constructor as class. If you have an object, you can get its class using this field.</p>\n</div></div></div><div id='property-data' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-property-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-property-data' class='name expandable'>data</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p>Dictionary.</p>\n</div><div class='long'><p>Dictionary.</p>\n</div></div></div><div id='property-lang' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-property-lang' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-property-lang' class='name expandable'>lang</a> : <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p><code>&lt;string&gt;</code> Currently selected locale identifier.</p>\n</div><div class='long'><p><code>&lt;string&gt;</code> Currently selected locale identifier.</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/JW.Plugins.Locale-method-constructor' class='name expandable'>JW.Plugins.Locale</a>( <span class='pre'>data, lang</span> ) : <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates localization management model. ...</div><div class='long'><p>Creates localization management model.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object<div class='sub-desc'><p>Dictionary.</p>\n</div></li><li><span class='pre'>lang</span> : <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a><div class='sub-desc'><p><code>&lt;string&gt;</code> Currently selected locale identifier.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_super' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-_super' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-_super' class='name expandable'>_super</a>( <span class='pre'></span> ) : Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is available only inside class methods that were passed into JW.extend method. ...</div><div class='long'><p>This method is available only inside class methods that were passed into <a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a> method.\nThis method is an easy way of the same superclass method calling:</p>\n\n<pre><code>...\n// Class method\nmyMethod: function(a, b, c) {\n    return this.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>(a, b) + c;\n}\n...\n</code></pre>\n\n<p>Equivalent code without <a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a> usage:</p>\n\n<pre><code>...\n// Class method\nmyMethod: function(a, b, c) {\n    return MyClass.<a href=\"#!/api/JW.Class-static-property-superclass\" rel=\"JW.Class-static-property-superclass\" class=\"docClass\">superclass</a>.myMethod.call(this, a, b) + c;\n}\n...\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Class destructor. ...</div><div class='long'><p>Class destructor. The logic of class instance destruction should be implemented here. You must call this method\nexplicitly from outside, because JavaScript doesn't support automatic class destructor calling. Alternatively\n(and optimally), you should use method <a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a> to aggregate objects inside each other. If you override this method,\ndon't forget to call superclass destructor at the end of the method:</p>\n\n<pre><code>destroy: function() {\n    // Release resources\n    ...\n    // Call superclass destructor\n    this.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>();\n}\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-expandTemplate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-method-expandTemplate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-method-expandTemplate' class='name expandable'>expandTemplate</a>( <span class='pre'>template</span> ) : string<span class=\"signature\"></span></div><div class='description'><div class='short'>Formats a string by a template in a current locale. ...</div><div class='long'><p>Formats a string by a template in a current locale. For example, \"${months.0}'10\" string\nwill be expanded to either \"Jan'10\" or \"Янв'10\" depending on current locale. The words which are taken to\nthe curly braces with $ sign will be replaced with the corresponding strings in the localization\ndictionary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>template</span> : string<div class='sub-desc'><p>Template.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>string</span><div class='sub-desc'><p>Formatted string.</p>\n</div></li></ul></div></div></div><div id='method-getFunctor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-method-getFunctor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-method-getFunctor' class='name expandable'>getFunctor</a>( <span class='pre'>id</span> ) : <a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a functor which builds the string with a key \"id\" in a current locale. ...</div><div class='long'><p>Returns a functor which builds the string with a key \"id\" in a current locale.\nThe client which uses this method must take care of its destruction.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : string/Array<div class='sub-desc'><p>String key to retrieve via <a href=\"#!/api/JW-static-method-get\" rel=\"JW-static-method-get\" class=\"docClass\">JW.get</a> method.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a></span><div class='sub-desc'><p><code>&lt;string&gt;</code> Functor.</p>\n</div></li></ul></div></div></div><div id='method-getLanguages' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-method-getLanguages' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-method-getLanguages' class='name expandable'>getLanguages</a>( <span class='pre'></span> ) : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array of all available locale identifiers in the dictionary. ...</div><div class='long'><p>Returns an array of all available locale identifiers in the dictionary.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p><code>&lt;string&gt;</code> Available locale identifiers.</p>\n</div></li></ul></div></div></div><div id='method-getString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-method-getString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-method-getString' class='name expandable'>getString</a>( <span class='pre'>lang, [id]</span> ) : string<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns locale string by key. ...</div><div class='long'><p>Returns locale string by key. Supports two variations:</p>\n\n<ul>\n<li>getString(id:string/Array):string - returns string with key \"id\" in a current locale</li>\n<li>getString(lang:string, id:string/Array):string - returns string with key \"id\" in locale \"lang\"</li>\n</ul>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lang</span> : string<div class='sub-desc'><p>Locale identifier.</p>\n</div></li><li><span class='pre'>id</span> : string/Array (optional)<div class='sub-desc'><p>String key to retrieve via <a href=\"#!/api/JW-static-method-get\" rel=\"JW-static-method-get\" class=\"docClass\">JW.get</a> method.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>string</span><div class='sub-desc'><p>String. If dictionary doesn't contain string with a specified key, returns id.\nIf id is an array in this situation, returns the last item of the array.</p>\n</div></li></ul></div></div></div><div id='method-getSubLocale' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-method-getSubLocale' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-method-getSubLocale' class='name expandable'>getSubLocale</a>( <span class='pre'>id</span> ) : <a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Builds a child localization object, which provides access to the strings in a specified sub-dictionary. ...</div><div class='long'><p>Builds a child localization object, which provides access to the strings in a specified sub-dictionary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : string/Array<div class='sub-desc'><p>Sub-dictionary key to retrieve via <a href=\"#!/api/JW-static-method-get\" rel=\"JW-static-method-get\" class=\"docClass\">JW.get</a> method.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Plugins.Locale\" rel=\"JW.Plugins.Locale\" class=\"docClass\">JW.Plugins.Locale</a></span><div class='sub-desc'><p>Child localization object.</p>\n</div></li></ul></div></div></div><div id='method-getTemplateFunctor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-method-getTemplateFunctor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-method-getTemplateFunctor' class='name expandable'>getTemplateFunctor</a>( <span class='pre'>template</span> ) : <a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a functor which formats the specified template in a current locale. ...</div><div class='long'><p>Returns a functor which formats the specified template in a current locale.\nThe client which uses this method must take care of its destruction.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>template</span> : string<div class='sub-desc'><p>Template.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a></span><div class='sub-desc'><p><code>&lt;string&gt;</code> Functor.</p>\n</div></li></ul></div></div></div><div id='method-own' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-own' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-own' class='name expandable'>own</a>( <span class='pre'>obj</span> ) : <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Aggregate a specified object in a current one. ...</div><div class='long'><p>Aggregate a specified object in a current one. It means that the specified object will be destroyed automatically\non this object destruction. The aggregated objects are destroyed in a reversive order.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a><div class='sub-desc'><p>An aggregated object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a></span><div class='sub-desc'><p>An aggregated object (obj).</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-formatDate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Plugins.Locale'>JW.Plugins.Locale</span><br/><a href='source/locale.html#JW-Plugins-Locale-static-method-formatDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Plugins.Locale-static-method-formatDate' class='name expandable'>formatDate</a>( <span class='pre'>date, mask, utc</span> ) : Object<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Formats date string. ...</div><div class='long'><p>Formats date string. An optimized version of the utility by Steven Levithan, which\nsupports dynamic localization switching now.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>date</span> : Date<div class='sub-desc'><p>Date.</p>\n</div></li><li><span class='pre'>mask</span> : string<div class='sub-desc'><p>Mask. Supports the next fragments:</p>\n\n<ul>\n<li>d - day in month 1-31</li>\n<li>dd - day in month 0-31</li>\n<li>ddd - day in month ${daysShort.0-6}</li>\n<li>dddd - day in month ${days.0-6}</li>\n<li>m - month 1-12</li>\n<li>mm - month 01-12</li>\n<li>mmm - month ${monthsShort.0-11}</li>\n<li>mmmm - month ${months.0-11}</li>\n<li>yy - year 00-99</li>\n<li>yyyy - year 1970-2100</li>\n<li>q - quarter 1-4</li>\n<li>h - hour 1-12</li>\n<li>hh - hour 01-12</li>\n<li>H - hour 0-23</li>\n<li>HH - hour 00-23</li>\n<li>M - minute 0-59</li>\n<li>MM - minute 00-59</li>\n<li>s - second 0-59</li>\n<li>ss - second 00-59</li>\n<li>l - millisecond 000-999</li>\n<li>t - a/p</li>\n<li>tt - am/pm</li>\n<li>T - A/P</li>\n<li>TT - AM/PM</li>\n</ul>\n\n</div></li><li><span class='pre'>utc</span> : boolean<div class='sub-desc'><p>Format in UTC.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Template to pass into <a href=\"#!/api/JW.Plugins.Locale-method-expandTemplate\" rel=\"JW.Plugins.Locale-method-expandTemplate\" class=\"docClass\">JW.Plugins.Locale.expandTemplate</a> method.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});