Ext.data.JsonP.rujwabstractcollectionmapper({"guide":"<h1 id='rujwabstractcollectionmapper-section-jw.abstractcollection.mapper'>JW.AbstractCollection.Mapper</h1>\n\n<p>Это краткое описание класса на русском языке.</p>\n\n<p>Полная документация на английском: <a href=\"#!/api/JW.AbstractCollection.Mapper\" rel=\"JW.AbstractCollection.Mapper\" class=\"docClass\">JW.AbstractCollection.Mapper</a></p>\n\n<p><code>&lt;T, U, TC extends <a href=\"#!/api/JW.AbstractCollection\" rel=\"JW.AbstractCollection\" class=\"docClass\">JW.AbstractCollection</a>&lt;T&gt;, UC extends <a href=\"#!/api/JW.AbstractCollection\" rel=\"JW.AbstractCollection\" class=\"docClass\">JW.AbstractCollection</a>&lt;U&gt;&gt;</code></p>\n\n<p>Конвертер элементов коллекции. Создает новую коллекцию того же типа, состоящую из элементов,\nравных результату запуска функции, указанной пользователем, на каждом элементе.\nИспользуется, прежде всего, для превращения данных в представление.</p>\n\n<pre><code>var mapper = dataCollection.<a href=\"#!/api/JW.AbstractCollection-method-createMapper\" rel=\"JW.AbstractCollection-method-createMapper\" class=\"docClass\">createMapper</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-createItem\" rel=\"JW.AbstractCollection.Mapper-cfg-createItem\" class=\"docClass\">createItem</a>: function(data) { return new View(this, data); },\n    <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-destroyItem\" rel=\"JW.AbstractCollection.Mapper-cfg-destroyItem\" class=\"docClass\">destroyItem</a>: <a href=\"#!/api/JW-static-method-destroy\" rel=\"JW-static-method-destroy\" class=\"docClass\">JW.destroy</a>,\n    <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-scope\" rel=\"JW.AbstractCollection.Mapper-cfg-scope\" class=\"docClass\">scope</a>: this\n});\nvar viewCollection = mapper.<a href=\"#!/api/JW.AbstractCollection.Mapper-property-target\" rel=\"JW.AbstractCollection.Mapper-property-target\" class=\"docClass\">target</a>;\n</code></pre>\n\n<p>Создавайте синхронизатор с помощью метода <a href=\"#!/api/JW.AbstractCollection-method-createMapper\" rel=\"JW.AbstractCollection-method-createMapper\" class=\"docClass\">JW.AbstractCollection.createMapper</a>.\nМетод сам определит, какая реализация синхронизатора лучше подойдет (простая или observable).</p>\n\n<p>Целевую коллекцию можно передать в качестве конфигурационной опции:</p>\n\n<pre><code>var viewCollection = new <a href=\"#!/api/JW.Array\" rel=\"JW.Array\" class=\"docClass\">JW.Array</a>();\nvar mapper = dataCollection.<a href=\"#!/api/JW.AbstractCollection-method-createMapper\" rel=\"JW.AbstractCollection-method-createMapper\" class=\"docClass\">createMapper</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-target\" rel=\"JW.AbstractCollection.Mapper-cfg-target\" class=\"docClass\">target</a>: viewCollection,\n    <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-createItem\" rel=\"JW.AbstractCollection.Mapper-cfg-createItem\" class=\"docClass\">createItem</a>: function(data) { return new View(this, data); },\n    <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-destroyItem\" rel=\"JW.AbstractCollection.Mapper-cfg-destroyItem\" class=\"docClass\">destroyItem</a>: <a href=\"#!/api/JW-static-method-destroy\" rel=\"JW-static-method-destroy\" class=\"docClass\">JW.destroy</a>,\n    <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-scope\" rel=\"JW.AbstractCollection.Mapper-cfg-scope\" class=\"docClass\">scope</a>: this\n});\n</code></pre>\n\n<p>Правила работы синхронизатора:</p>\n\n<ul>\n<li>Целевая коллекция находится в поле <a href=\"#!/api/JW.AbstractCollection.Mapper-property-target\" rel=\"JW.AbstractCollection.Mapper-property-target\" class=\"docClass\">target</a>.</li>\n<li>При конструировании синхронизатора все элементы исходной коллекции сразу конвертируются и добавляются в\n<a href=\"#!/api/JW.AbstractCollection.Mapper-property-target\" rel=\"JW.AbstractCollection.Mapper-property-target\" class=\"docClass\">target</a>.</li>\n<li>При уничтожении синхронизатора все элементы удаляются из <a href=\"#!/api/JW.AbstractCollection.Mapper-property-target\" rel=\"JW.AbstractCollection.Mapper-property-target\" class=\"docClass\">target</a> и уничтожаются.</li>\n<li>Целевую коллекцию можно передать в качестве конфигурационной опции <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-target\" rel=\"JW.AbstractCollection.Mapper-cfg-target\" class=\"docClass\">target</a>.\nВ этом случае, вся забота о ее уничтожении ложится на вас (хотя элементы будут из нее удалены автоматически\nпри уничтожении синхронизатора).</li>\n<li>Если <a href=\"#!/api/JW.AbstractCollection.Mapper-cfg-target\" rel=\"JW.AbstractCollection.Mapper-cfg-target\" class=\"docClass\">target</a> не передан, то он будет создан автоматически. Синхронизатор подберет наиболее подходящую\nреализацию <a href=\"#!/api/JW.AbstractCollection.Mapper-property-target\" rel=\"JW.AbstractCollection.Mapper-property-target\" class=\"docClass\">target</a> (простая или observable). В этом\nслучае, <a href=\"#!/api/JW.AbstractCollection.Mapper-property-target\" rel=\"JW.AbstractCollection.Mapper-property-target\" class=\"docClass\">target</a> будет уничтожен автоматически при уничтожении синхронизатора.</li>\n<li>При перемещении/переупорядочении элементов исходной коллекции элементы целевой коллекции не пересоздаются,\nно перемещаются в полном соответствии с исходной коллекцией.</li>\n</ul>\n\n\n<p><strong>Дополнительные правила для различных типов коллекций</strong></p>\n\n<p><a href=\"#!/guide/rujwabstractarray\">JW.AbstractArray</a>:</p>\n\n<ul>\n<li>При конструировании синхронизатора целевая коллекция должна быть пуста.</li>\n<li>Целевую коллекцию можно синхронизировать только с одной исходной коллекцией.</li>\n</ul>\n\n\n<p><a href=\"#!/guide/rujwabstractmap\">JW.AbstractMap</a>:</p>\n\n<ul>\n<li>Целевую коллекцию можно синхронизировать с несколькими исходными коллекциями, если ключи всех элементов различны.</li>\n<li>В целевую коллекцию можно добавлять элементы вручную, если их ключи не пересекаются с ключами других элементов.</li>\n</ul>\n\n\n<p><a href=\"#!/guide/rujwabstractset\">JW.AbstractSet</a>:</p>\n\n<ul>\n<li>Целевую коллекцию можно синхронизировать с несколькими исходными коллекциями, если все элементы различны.</li>\n<li>В целевую коллекцию можно добавлять элементы вручную, если они не пересекаются с другими элементами.</li>\n</ul>\n\n","title":"JW.AbstractCollection.Mapper"});