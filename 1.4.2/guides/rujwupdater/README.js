Ext.data.JsonP.rujwupdater({"guide":"<h1 id='rujwupdater-section-jw.updater'>JW.Updater</h1>\n\n<p>Это краткое описание класса на русском языке.</p>\n\n<p>Полная документация на английском: <a href=\"#!/api/JW.Updater\" rel=\"JW.Updater\" class=\"docClass\">JW.Updater</a></p>\n\n<p>Наблюдает за изменением <a href=\"#!/guide/rujwproperty\">свойств</a> и вызывает\nуказанную функцию, передавая в нее значения свойств в качестве аргументов. Также,\nфункция вызывается при инициализации.</p>\n\n<pre><code>var frequency = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(106.2);\nvar wave = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"FM\");\nvar updater = new <a href=\"#!/api/JW.Updater\" rel=\"JW.Updater\" class=\"docClass\">JW.Updater</a>([ frequency, wave ], function(frequency, wave) {\n    console.log(\"Включаем радио на частоте \" + frequency + \" \" + wave);\n}, this); // вывод: Включаем радио на частоте 106.2 FM\nfrequency.<a href=\"#!/api/JW.Property-method-set\" rel=\"JW.Property-method-set\" class=\"docClass\">set</a>(105); // вывод: Включаем радио на частоте 105 FM\nwave.<a href=\"#!/api/JW.Property-method-set\" rel=\"JW.Property-method-set\" class=\"docClass\">set</a>(\"УКВ\"); // вывод: Включаем радио на частоте 105 УКВ\n</code></pre>\n","title":"JW.Updater"});