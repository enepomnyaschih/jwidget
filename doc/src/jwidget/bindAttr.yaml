symbols:
  default:
    signature: |
      (el: %AttrUpdaterElement, attr: string, property: %Bindable<string>): %Destroyable
    params:
      el: DOM element.
      attr: Attribute name.
      property: Attribute value to assign.
    returns: Binding object. You must %destroy it to stop the synchronization.
    description: |
      <p>Binds an attribute of a DOM element to a string %Property.</p>
      <pre>
      // Bind "title" attribute to title property value
      %bindAttr(el, "title", title);
      </pre>
      %example:bindAttr
      <p>The function returns a binding object. If you need to stop the synchronization, %destroy it. This is not necessary
      if you work with a private property and a private DOM element as in the example above. However, if you work with an
      external model or an external DOM element (e.g. they get passed to the constructor of the component), you must take care of
      the binding destruction, because life time of these objects can be longer than the life time of your
      component. The easiest way to do it is to %own the binding:</p>
      <pre>
      this.%own(%bindAttr(el, "title", title));
      </pre>

  AttrUpdaterElement:
    kind: interface
    simple: true
    description: |
      <p>Subset of %JQuery element methods necessary for %bindAttr binding implementation.</p>
    methods:
      attr:
        signature: |
          (attr: string, value: string)
        description: |
          <p>See %JQuery.%attr.</p>
        references:
          attr:
            href: https://api.jquery.com/attr/
