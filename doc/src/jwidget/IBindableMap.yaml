symbols:
  default:
    kind: interface
    typevars:
      K: Key type.
      V: Value type.
    extends:
      - file: jwidget/DestroyableReadonlyBindableMap
        typevars: [K, V]
      - file: jwidget/IClass
    description: |
      <p>Extension of %DestroyableReadonlyBindableMap with modification methods.</p>

    methods:
      ownValues:
        signature: |
          (): this
        description: |
          <p>Makes this map an owner of its values, which means that its values are alive as long as they are present in
          this map. A value is destroyed when it leaves the map, and all values are destroyed on the map destruction.
          All values in such map must be unique.</p>

      set:
        signature: |
          (key: %K, value: %V): %V
        params:
          key: Entry key.
          value: Entry value.
        returns: Old value of the entry.
        description: |
          <p>Adds or updates an entry with the specified key and dispatches %onSplice message.</p>

      setAll:
        signature: |
          (entries: %ReadonlyMap<%K, %V>)
        params:
          entries: Entries to add or update.
        description: |
          <p>Adds or updates several entries and dispatches %onSplice message.</p>

      setKey:
        signature: |
          (oldKey: %K, newKey: %K): %V
        params:
          oldKey: Old key.
          newKey: New key.
        returns: Value of the updated entry.
        description: |
          <p>Changes entry key in the map and dispatches %onReindex message.</p>

      remove:
        signature: |
          (key: %K): %V
        params:
          key: Entry key.
        returns: Value of the removed entry.
        description: |
          <p>Removes an entry with the specified key and dispatches %onSplice message.</p>

      removeAll:
        signature: |
          (keys: %Iterable<%K>)
        params:
          keys: Entry keys.
        description: |
          <p>Removes multiple entries from the map and dispatches %onSplice message.</p>

      clear:
        signature: |
          (): %Map<%K, %V>
        returns: Old map contents or an empty map.
        description: |
          <p>Removes all map entries and dispatches %onClear message. Returns an empty map if this map is already
          empty.</p>

      splice:
        signature: |
          (keysToRemove: %Iterable<%K>, entriesToUpdate: %ReadonlyMap<%K, %V>): %IBindableMap.%SpliceResult<%K, %V>
        params:
          keysToRemove: Keys of entries to remove.
          entriesToUpdate: Entries to add or update.
        returns: Splice result. Never returns null or undefined.
        description: |
          <p>Removes, add and updates multiple entries in the map. Universal optimized granular operation of removal/insertion.</p>

      reindex:
        signature: |
          (keyMapping: %ReadonlyMap<%K, %K>): Map<%K, %K>
        params:
          keyMapping: |
            Key mapping. Entry with key x will gain key <code>keyMapping[x]</code>.
            It is necessary to pass only changed keys, but unchanged keys or nonexistent keys are acceptable as well.
        returns: Mapping of truly changed keys. Never returns null or undefined.
        description: |
          <p>Changes entry keys in the map and dispatches %onReindex message.</p>

      trySet:
        signature: |
          (key: %K, value: %V): %Some<%V>
        params:
          key: Entry key.
          value: Entry value.
        returns: Wrapper over the old value of the entry. If the entry already has this value, returns undefined.
        description: |
          <p>Adds or updates an entry with the specified key and dispatches %onSplice message.</p>

      trySetAll:
        signature: |
          (entries: %ReadonlyMap<%K, %V>): %IBindableMap.%SpliceResult<%K, %V>
        params:
          entries: Entries to add or update.
        returns: Splice result. If the map hasn't changed, returns undefined.
        description: |
          <p>Adds or updates several entries and dispatches %onSplice message.</p>

      trySetKey:
        signature: |
          (oldKey: %K, newKey: %K): %V
        params:
          oldKey: Old key.
          newKey: New key.
        returns: Value of the updated entry. If the key hasn't changed, returns undefined.
        description: |
          <p>Changes entry key in the map and dispatches %onReindex message.</p>

      tryRemoveAll:
        signature: |
          (keys: %Iterable<%K>): %Map<%K, %V>
        params:
          keys: Entry keys.
        returns: The removed entries. If no entries have been removed, returns undefined.
        description: |
          <p>Removes multiple entries from the map and dispatches %onSplice message.</p>

      tryClear:
        signature: |
          (): %Map<%K, %V>
        returns: Old map contents or undefined.
        description: |
          <p>Removes all map entries and dispatches %onClear message. Returns undefined if this map is already
          empty.</p>

      trySplice:
        signature: |
          (keysToRemove: %Iterable<%K>, entriesToUpdate: %ReadonlyMap<%K, %V>): %IBindableMap.%SpliceResult<%K, %V>
        params:
          keysToRemove: Keys of entries to remove.
          entriesToUpdate: Entries to add or update.
        returns: Splice result. If the map hasn't changed, returns undefined.
        description: |
          <p>Removes, add and updates multiple entries in the map. Universal optimized granular operation of removal/insertion.</p>

      tryReindex:
        signature: |
          (keyMapping: %ReadonlyMap<%K, %K>): %Map<%K, %K>
        params:
          keyMapping: |
            Key mapping. Entry with key x will gain key <code>keyMapping[x]</code>.
            It is necessary to pass only changed keys, but unchanged keys or nonexistent keys are acceptable as well.
        returns: Mapping of truly changed keys. If the map hasn't changed, returns undefined.
        description: |
          <p>Changes entry keys in the map and dispatches %onReindex message.</p>

      performSplice:
        signature: |
          (newContents: %ReadonlyMap<%K, %V>)
        params:
          newContents: New map contents.
        description: |
          <p>Adjusts map contents to %newContents using %detectSplice and %splice methods.</p>

      performReindex:
        signature: |
          (newContents: %ReadonlyMap<%K, %V>)
        params:
          newContents: New map contents.
        description: |
          <p>Adjusts map contents to %newContents using %detectReindex and %reindex methods.
          All values in %newContents must be %unique.</p>

  IBindableMap.SpliceParams:
    kind: interface
    simple: true
    typevars:
      K: Key type.
      V: Value type.
    description: |
      <p>%splice method arguments. Result of %detectSplice method.</p>
    properties:
      keysToRemove:
        modifiers: readonly
        type: '%Iterable<%K>'
        description: Keys to remove.

      entriesToUpdate:
        modifiers: readonly
        type: '%ReadonlyMap<%K, %V>'
        description: Entries to add or update.

  IBindableMap.SpliceResult:
    kind: interface
    simple: true
    typevars:
      K: Key type.
      V: Value type.
    description: |
      <p>%IBindableMap.%splice method result.</p>
    properties:
      removedEntries:
        modifiers: readonly
        type: '%ReadonlyMap<%K, %V>'
        description: Removed entries.
      addedEntries:
        modifiers: readonly
        type: '%ReadonlyMap<%K, %V>'
        description: Added entries.

references:
  SpliceResult:
    symbol: IBindableMap.SpliceResult
    label: SpliceResult

  splice:
    symbol: default
    member: splice

  detectSplice:
    symbol: default
    member: detectSplice

  onSplice:
    symbol: default
    member: onSplice

  onReindex:
    symbol: default
    member: onReindex

  onClear:
    symbol: default
    member: onClear
