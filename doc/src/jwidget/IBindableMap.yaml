symbols:
  default:
    kind: interface
    typevars:
      K: Key type.
      V: Value type.
    extends:
      - file: jwidget/DestroyableReadonlyBindableMap
        typevars: [K, V]
      - file: jwidget/IClass
    description: |
      <p>Extension of %DestroyableReadonlyBindableMap with modification methods.</p>

    methods:
      ownValues:
        signature: |
          (): this
        description: |
          <p>Makes this map an owner of its values, which means that its values are alive as long as they are present in
          this map. A value is destroyed when it leaves the map, and all values are destroyed on the map destruction.
          All values in such map must be %unique.</p>

      set:
        signature: |
          (key: %K, value: %V): %V
        params:
          key: Entry key.
          value: Value to set.
        returns: Old value of the entry. If the function call creates a new entry, returns undefined.
        description: |
          <p>Adds or updates an entry with the specified key and dispatches %onSplice message.</p>

      setAll:
        signature: |
          (entries: %ReadonlyMap<%K, %V>)
        params:
          entries: Entries to add or update.
        description: |
          <p>Adds or replaces multiple entries and dispatches %onSplice message.</p>

      setKey:
        signature: |
          (oldKey: %K, newKey: %K): %V
        params:
          oldKey: Old key of an entry.
          newKey: New key of the entry.
        returns: The value of the entry.
        description: |
          <p>Changes a key of an entry in the map and dispatches a reindexing message.
          If the map doesn't contain %oldKey or contains %newKey, and they are not equal, throws an error.</p>

      delete:
        signature: |
          (key: %K): %V
        params:
          key: Key of an entry to delete.
        returns: Value of the entry.
        description: |
          <p>Deletes an entry with the specified key and dispatches %onSplice message.</p>

      deleteAll:
        signature: |
          (keys: %Iterable<%K>)
        params:
          keys: Keys of entries to delete.
        description: |
          <p>Deletes multiple entries from the map and dispatches %onSplice message.</p>

      clear:
        signature: |
          (): %Map<%K, %V>
        returns: Old contents of the map. Never returns null of undefined.
        description: |
          <p>Deletes all map entries and dispatches %onClear message.</p>

      splice:
        signature: |
          (keysToDelete: %Iterable<%K>, entriesToUpdate: %ReadonlyMap<%K, %V>): %IBindableMap.%SpliceResult<%K, %V>
        params:
          keysToDelete: Keys of entries to delete.
          entriesToUpdate: Entries to add or replace.
        returns: Splice result. Never returns null or undefined.
        description: |
          <p>Deletes and/or adds multiple entries in the map granularly and dispatches %onSplice message.</p>

      reindex:
        signature: |
          (keyMapping: %ReadonlyMap<%K, %K>): Map<%K, %K>
        params:
          keyMapping: |
            Key mapping. Entry with key x will gain key %keyMapping[x]. It is necessary to pass only truly
            changed keys. The unchanged or non-existent keys are ignored.
        returns: Mapping of truly changed keys. Never returns null or undefined.
        description: |
          <p>Changes entry keys in the map granularly and dispatches %onReindex message.</p>

      trySet:
        signature: |
          (key: %K, value: %V): %Some<%V>
        params:
          key: Entry key.
          value: Entry value.
        returns: |
          Wrapper over the old value of the entry. If the function call creates a new entry, returns
          %Some(undefined). If the call doesn't modify the map, returns undefined.
        description: |
          <p>Adds or replaces an entry with the specified key and dispatches %onSplice message.</p>

      trySetAll:
        signature: |
          (entries: %ReadonlyMap<%K, %V>): %IBindableMap.%SpliceResult<%K, %V>
        params:
          entries: Entries to add or update.
        returns: Result of an internal splice method call. If the call doesn't modify the map, returns undefined.
        description: |
          <p>Adds or replaces multiple entries and dispatches %onSplice message.</p>

      trySetKey:
        signature: |
          (oldKey: %K, newKey: %K): %V
        params:
          oldKey: Old key of an entry.
          newKey: New key of the entry.
        returns: The value of the entry. If the call doesn't modify the map, returns undefined.
        description: |
          <p>Changes a key of an entry in the map and dispatches %onReindex message.
          If the map doesn't contain %oldKey or contains %newKey, and they are not equal, throws an error.</p>

      tryDeleteAll:
        signature: |
          (keys: %Iterable<%K>): %Map<%K, %V>
        params:
          keys: Keys of entries to delete.
        returns: The deleted entries. If the call doesn't modify the map, returns undefined.
        description: |
          <p>Deletes multiple entries from the map and dispatches %onSplice message.</p>

      tryClear:
        signature: |
          (): %Map<%K, %V>
        returns: Old contents of the map. If the call doesn't modify the map, returns undefined.
        description: |
          <p>Deletes all map entries and dispatches %onClear message.</p>

      trySplice:
        signature: |
          (keysToDelete: %Iterable<%K>, entriesToUpdate: %ReadonlyMap<%K, %V>): %IBindableMap.%SpliceResult<%K, %V>
        params:
          keysToDelete: Keys of entries to delete.
          entriesToUpdate: Entries to add or replace.
        returns: Splice result. If the call doesn't modify the map, returns undefined.
        description: |
          <p>Deletes and/or adds multiple entries in the map granularly and dispatches %onSplice message.</p>

      tryReindex:
        signature: |
          (keyMapping: %ReadonlyMap<%K, %K>): %Map<%K, %K>
        params:
          keyMapping: |
            Key mapping. Entry with key x will gain key %keyMapping[x]. It is necessary to pass only truly
            changed keys. The unchanged or non-existent keys are ignored.
        returns: Mapping of truly changed keys. If the call doesn't modify the map, returns undefined.
        description: |
          <p>Changes entry keys in the map granularly and dispatches %onReindex message.</p>

      performSplice:
        signature: |
          (newContents: %ReadonlyMap<%K, %V>)
        params:
          newContents: New contents of the map.
        description: |
          <p>Adjusts the map contents to %newContents using %detectSplice and %splice methods.</p>

      performReindex:
        signature: |
          (newContents: %ReadonlyMap<%K, %V>)
        params:
          newContents: New map contents.
        description: |
          <p>Adjusts the map contents to %newContents using %detectReindex and %reindex methods.
          All values must be %unique.</p>

  IBindableMap.SpliceParams:
    kind: interface
    simple: true
    typevars:
      K: Key type.
      V: Value type.
    description: |
      <p>%IBindableMap.%splice method arguments. Result of %detectSplice method.</p>
    properties:
      keysToDelete:
        modifiers: readonly
        type: '%Iterable<%K>'
        description: Keys to delete.

      entriesToUpdate:
        modifiers: readonly
        type: '%ReadonlyMap<%K, %V>'
        description: Entries to add or replace.

  IBindableMap.SpliceResult:
    kind: interface
    simple: true
    typevars:
      K: Key type.
      V: Value type.
    description: |
      <p>%IBindableMap.%splice method result.</p>
    properties:
      deletedEntries:
        modifiers: readonly
        type: '%ReadonlyMap<%K, %V>'
        description: Deleted entries.
      addedEntries:
        modifiers: readonly
        type: '%ReadonlyMap<%K, %V>'
        description: Added entries.

references:
  SpliceResult:
    symbol: IBindableMap.SpliceResult
    label: SpliceResult

  splice:
    symbol: default
    member: splice

  detectSplice:
    symbol: default
    member: detectSplice

  onSplice:
    symbol: default
    member: onSplice

  onReindex:
    symbol: default
    member: onReindex

  onClear:
    symbol: default
    member: onClear
