symbols:
  default:
    defaultName: SetConverterToArray
    typevars:
      T: Value type.
    extends:
      - file: jwidget/Class
    description: |
      <p><b>Set converter to array</b> binds an array to a set, filling it with values of the set in natural
      order. This order may differ in different browsers. After initialization, all newly added values get appended to
      the end of the array.</p>
      <pre>
      const source = new %BindableSet([1, 2, 3]);
      const converter = new %SetConverterToArray(source);
      const target = converter.%target;

      expect(target.%includes(1)).equal(true);
      expect(target.%includes(4)).equal(false);

      // The target array is automatically synchronized with the source set.
      source.%add(4);
      expect(target.%get(3)).equal(4);

      // Destroy the converter to stop synchronization.
      converter.%destroy();
      </pre>
      <p>If you want to build an array with a special item order, use %SetSorter instead.</p>

      <h3>Features and examples</h3>

      <p>You can pass target array in config option:</p>
      <pre>
      const source = new %BindableSet([1, 2, 3]);
      const target = new %BindableArray<number>();
      const converter = new %SetConverterToArray(source, {%targetOfConfig});
      </pre>
      <p>If you want to create a new array, use shorthand function %startConvertingSetToArray instead:</p>
      <pre>
      const source = new %BindableSet([1, 2, 3]);
      const target = %startConvertingSetToArray(source);

      // Destroy the target array to stop synchronization.
      target.%destroy();
      </pre>

      <h3>Synchronizer rules</h3>

      <ul>
        <li>All values of the source set get added to %target immediately on synchronizer initialization.</li>
        <li>The values get deleted from %target on synchronizer destruction.</li>
        <li>Target array gets synchronized with source set continuously until the synchronizer is destroyed.</li>
        <li>You can add values in %targetOfConfig from other sources as long as you avoid duplications. All values must
        be %unique.</li>
      </ul>

    constructor:
      signature: |
        (source: %ReadonlyBindableSet<%T>, config?: %SetConverterToArray.%Config<%T>)
      params:
        source: Source set.
        config: Converter configuration.

    properties:
      source:
        modifiers: readonly
        type: '%ReadonlyBindableSet<%T>'
        description: Source set.

      target:
        modifiers: readonly
        type: '%ReadonlyBindableArray<%T>'
        description: Target array.

    references:
      includes:
        file: jwidget/ReadonlyBindableArray
        member: includes

      add:
        file: jwidget/IBindableSet
        member: add

      get:
        file: jwidget/ReadonlyBindableArray
        member: get

      targetOfConfig:
        symbol: SetConverterToArray.Config
        member: target
        label: target

  SetConverterToArray.Config:
    kind: interface
    simple: true
    typevars:
      T: Collection value type.
    description: |
      <p>Configuration of %SetConverterToArray.</p>

    properties:
      target:
        modifiers: readonly
        optional: true
        type: '%IBindableArray<%T>'
        description: |
          <p>Target array. By default, created automatically.</p>

  startConvertingSetToArray:
    signature: |
      <T>(source: %ReadonlyBindableSet<T>): %DestroyableReadonlyBindableArray<T>
    params:
      source: Source set.
    returns: Target array.
    description: 'Creates a new array bound to a set with %SetConverterToArray.'

references:
  Config:
    symbol: SetConverterToArray.Config
