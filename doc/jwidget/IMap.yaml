symbols:
  default:
    kind: interface
    typevars:
      T: Item type.
    extends:
      - file: jwidget/DestroyableReadonlyMap
        typevars: [T]
      - file: jwidget/ICollection
        typevars: [T]
    description: |
      <p>Extension of %DestroyableReadonlyMap with modification methods.</p>

    methods:
      put:
        signature: |
          (key: string, item: %T): %T
        params:
          key: Item key.
          item: Item to put.
        returns: The replaced item.
        description: |
          <p>Puts or replaces an item with the specified key.</p>

      putAll:
        signature: |
          (items: %Dictionary<%T>)
        params:
          items: Items to put.
        description: |
          <p>Puts or replaces a bunch of items.</p>

      putAllVerbose:
        signature: |
          (items: %Dictionary<%T>): %IMap.%SpliceResult<%T>
        params:
          items: Items to put.
        results: Result of internal %splice method call.
        description: |
          <p>Low-performance alternative to %putAll with verbose result set.</p>

      setKey:
        signature: |
          (oldKey: string, newKey: string): %T
        params:
          oldKey: Old key of the item.
          newKey: New key of the item.
        returns: The moved item.
        description: |
          <p>Changes item key in the map. If collection doesn't contain oldKey or contains newKey, it may lead to
          unexpected consequences.</p>

      remove:
        signature: |
          (key: string): %T
        params:
          key: Item key.
        returns: The removed item.
        description: |
          <p>Removes item with specified key.</p>

      removeAll:
        signature: |
          (keys: string[])
        params:
          keys: Item keys.
        description: |
          <p>Removes a bunch of items from the map.</p>

      removeAllVerbose:
        signature: |
          (keys: string[]): %Dictionary<%T>
        params:
          keys: Item keys.
        returns: The removed items.
        description: |
          <p>Low-performance alternative to %removeAll with verbose result set.</p>

      clear:
        signature: |
          (): %Dictionary<%T>
        returns: Old collection contents.
        description: |
          <p>Clears the collection and triggers %clearEvent.</p>

      splice:
        signature: |
          (removedKeys: string[], updatedItems: %Dictionary<%T>): %IMap.%SpliceResult<%T>
        params:
          removedKeys: Keys of items to remove.
          updatedItems: Items to put/replace.
        returns: Splice result. Never returns null or undefined.
        description: |
          <p>Removes and adds bunches of items in the map. Universal optimized granular operation of removal/insertion.</p>

      reindex:
        signature: |
          (keyMap: %Dictionary<string>): %Dictionary<string>
        params:
          keyMap: |
            Key dictionary. Item with key x will gain key <tt>keyMap[x]</tt>.
            It is necessary to pass only changed keys, but unchanged keys or nonexistent keys are acceptable as well.
        returns: Dictionary of changed keys. Never returns null or undefined.
        description: |
          <p>Changes item keys in the map.</p>

      tryPut:
        signature: |
          (key: string, item: %T): %Some<%T>
        params:
          key: Item key.
          item: Item to put.
        returns: The replaced item. If collection is not modified, returns undefined.
        description: |
          <p>Puts or replaces an item with the specified key.</p>

      tryPutAll:
        signature: |
          (items: %Dictionary<%T>): %IMap.%SpliceResult<%T>
        params:
          items: Items to put.
        returns: Result of internal %splice method call. If collection is not modified, returns undefined.
        description: |
          <p>Puts or replaces a bunch of items.</p>

      trySetKey:
        signature: |
          (oldKey: string, newKey: string): %T
        params:
          oldKey: Old key of the item.
          newKey: New key of the item.
        returns: The moved item. If collection is not modified, returns undefined.
        description: |
          <p>Changes item key in map. If collection doesn't contain oldKey or contains newKey, it may lead to unexpected
          consequences.</p>

      tryRemove:
        signature: |
          (key: string): %T
        params:
          key: Item key.
        returns: The removed item. If collection is not modified, returns undefined.
        description: |
          <p>Removes item with specified key.</p>

      tryRemoveAll:
        signature: |
          (keys: string[]): %Dictionary<%T>;
        params:
          keys: Item keys.
        returns: The removed items. If collection is not modified, returns undefined.
        description: |
          <p>Removes a bunch of items from the map.</p>

      trySplice:
        signature: |
          (removedKeys: string[], updatedItems: %Dictionary<%T>): %IMap.%SpliceResult<%T>
        params:
          removedKeys: Keys of items to remove.
          updatedItems: Items to put/replace.
        returns: Splice result. If collection is not modified, returns undefined.
        description: |
          <p>Removes and adds bunches of items in the map. Universal optimized granular operation of removal/insertion.</p>

      tryReindex:
        signature: |
          (keyMap: %Dictionary<string>): %Dictionary<string>
        params:
          keyMap: |
            Key dictionary. Item with key x will gain key <tt>keyMap[x]</tt>. It is necessary to pass only changed keys,
            but unchanged keys or nonexistent keys are acceptable as well.
        returns: Dictionary of changed keys. If collection is not modified, returns undefined.
        description: |
          <p>Changes item keys in the map.</p>

      performSplice:
        signature: |
          (newItems: %Dictionary<%T>)
        params:
          newItems: New map contents.
        description: |
          <p>Adjusts map contents to %newItems using %detectSplice and %splice methods.</p>

      performReindex:
        signature: |
          (newItems: %Dictionary<%T>, getKey?: (item: %T) => any, scope?: any)
        params:
          newItems: New map contents.
          getKey: |
            Function which returns unique key of an item in this collection.
            Defaults to %getKey property of the collection.
          scope: '%getKey call scope. Defaults to collection itself.'
        description: |
          <p>Adjusts map contents to %newItems using %detectReindex and %reindex methods.
          All items must have unique %getKey function result.</p>

    references:
      EventParams:
        file: jwidget/IMap
        symbol: IMap.EventParams
        label: EventParams

  IMap.EventParams:
    kind: interface
    simple: true
    typevars:
      T: Item type.
    extends:
      - file: jwidget/ICollection
        symbol: ICollection.EventParams
        typevars: [T]
    description: |
      <p>%IMap event parameters.</p>
    properties:
      sender:
        modifiers: readonly
        type: '%IMap<%T>'
        description: Event sender.

  IMap.SpliceEventParams:
    kind: interface
    simple: true
    typevars:
      T: Item type.
    extends:
      - file: jwidget/IMap
        symbol: IMap.EventParams
        typevars: [T]
    description: |
      <p>Parameters of %spliceEvent.</p>
    properties:
      spliceResult:
        modifiers: readonly
        type: '%IMap.%SpliceResult<%T>'
        description: 'Parameters of %spliceEvent.'

  IMap.ReindexEventParams:
    kind: interface
    simple: true
    typevars:
      T: Item type.
    extends:
      - file: jwidget/IMap
        symbol: IMap.EventParams
        typevars: [T]
    description: |
      <p>Parameters of %reindexEvent.</p>
    properties:
      keyMap:
        modifiers: readonly
        type: '%Dictionary<string>'
        description: Map of changed keys.

  IMap.ItemsEventParams:
    kind: interface
    simple: true
    typevars:
      T: Item type.
    extends:
      - file: jwidget/IMap
        symbol: IMap.EventParams
        typevars: [T]
    description: |
      <p>Parameters of %clearEvent.</p>
    properties:
      items:
        modifiers: readonly
        type: '%Dictionary<%T>'
        description: Old map contents.

  IMap.SpliceParams:
    kind: interface
    simple: true
    typevars:
      T: Item type.
    description: |
      <p>%splice method arguments. Result of %detectSplice method.</p>
    properties:
      removedKeys:
        modifiers: readonly
        type: 'string[]'
        description: Keys of items to remove.

      updatedItems:
        modifiers: readonly
        type: '%Dictionary<%T>'
        description: Items to put/replace.

  IMap.SpliceResult:
    kind: interface
    simple: true
    typevars:
      T: Item type.
    description: |
      <p>%IMap.%splice method result.</p>
    properties:
      removedItems:
        modifiers: readonly
        type: '%Dictionary<%T>'
        description: Removed items.
      addedItems:
        modifiers: readonly
        type: '%Dictionary<%T>'
        description: Added items.

references:
  SpliceResult:
    symbol: IMap.SpliceResult
    label: SpliceResult

  splice:
    symbol: default
    member: splice

  detectSplice:
    symbol: default
    member: detectSplice

  spliceEvent:
    symbol: default
    member: spliceEvent

  reindexEvent:
    symbol: default
    member: reindexEvent

  clearEvent:
    symbol: default
    member: clearEvent
