expandImports: true

symbols:
  createIndexer:
    signature: |
      <T>(source: %ReadonlyCollection<T>, getKey: (item: T) => any, config?: %AbstractIndexer.%Config<T>): %AbstractIndexer<T>
    params:
      source: Source collection.
      getKey: Indexer function.
      config: Indexer configuration.
    returns: Collection indexer.
    description: |
      <p>Creates an indexer matching the source collection type. See %indexers for details.</p>
      <p>If you know exact type of the source collection, please use %ListIndexer, %MapIndexer and %SetIndexer
      constructors instead, because they are more efficient.</p>

  indexCollection:
    signature: |
      <T>(source: %ReadonlyCollection<T>, getKey: (item: T) => any, scope?: any): %DestroyableReadonlyMap<T>
    params:
      source: Source collection.
      getKey: Indexer function.
      scope: Call scope of %getKey callback.
    returns: Collection index map.
    description: |
      <p>Indexes a collection and starts synchronization. See %indexers for details.</p>
      <p>If you know exact type of the source collection, please use %indexList, %indexMap and %indexSet
      functions instead, because they are more efficient.</p>

references:
  Config:
    file: jwidget/mapper/AbstractIndexer
    symbol: AbstractIndexer.Config
