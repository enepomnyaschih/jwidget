Ext.data.JsonP.rujwproperty({"guide":"<h1 id='rujwproperty-section-jw.property'>JW.Property</h1>\n\n<p>Это краткое описание класса на русском языке.</p>\n\n<p>Полная документация на английском: <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a></p>\n\n<p><code>&lt;V&gt;</code> Свойство, которое умеет оповещать о своем изменении. Удобный способ наладить\nсвязь между двумя объектами. Имеет следующие хелперы:</p>\n\n<ul>\n<li><a href=\"#!/guide/rujwcopier\">JW.Copier</a> - сохраняет одно свойство равным другому свойству</li>\n<li><a href=\"#!/guide/rujwupdater\">JW.Updater</a> - наблюдает за несколькими свойствами, выполняя какое-то действие при их изменении</li>\n<li><a href=\"#!/guide/rujwfunctor\">JW.Functor</a> - наблюдает за несколькими свойствами, присваивая результат указанной функции целевому свойству</li>\n<li><a href=\"#!/guide/rujwmapper\">JW.Mapper</a> - наблюдает за несколькими свойствами, пересоздавая и уничтожая значение целевого свойства</li>\n<li><a href=\"#!/guide/rujwswitcher\">JW.Switcher</a> - наблюдает за свойством, чтобы инициализировать и освобождать его значение</li>\n<li><a href=\"#!/guide/rujwuitextupdater\">JW.UI.TextUpdater</a> - наблюдает за строковым свойством и обновляет текст в DOM элементе</li>\n<li><a href=\"#!/guide/rujwuihtmlupdater\">JW.UI.HtmlUpdater</a> - наблюдает за строковым свойством и обновляет HTML в DOM элементе</li>\n<li><a href=\"#!/guide/rujwuivalueupdater\">JW.UI.ValueUpdater</a> - наблюдает за строковым свойством и обновляет значение в DOM элементе текстового ввода</li>\n<li><a href=\"#!/guide/rujwuiattrupdater\">JW.UI.AttrUpdater</a> - наблюдает за строковым свойством и обновляет указанный атрибут в DOM элементе</li>\n<li><a href=\"#!/guide/rujwuipropupdater\">JW.UI.PropUpdater</a> - наблюдает за булевым свойством и обновляет указанное свойство в DOM элементе</li>\n<li><a href=\"#!/guide/rujwuicssupdater\">JW.UI.CssUpdater</a> - наблюдает за строковым свойством и обновляет указанный CSS стиль в DOM элементе</li>\n<li><a href=\"#!/guide/rujwuiclassupdater\">JW.UI.ClassUpdater</a> - наблюдает за булевым свойством и обновляет наличие указанного CSS класса в DOM элементе</li>\n<li><a href=\"#!/guide/rujwuiclassnameupdater\">JW.UI.ClassNameUpdater</a> - наблюдает за строковым свойством и обновляет имя CSS класса в DOM элементе</li>\n<li><a href=\"#!/guide/rujwuiradioupdater\">JW.UI.RadioUpdater</a> - наблюдает за строковым свойством и обновляет выбор DOM радиокнопок</li>\n<li><a href=\"#!/guide/rujwuivaluelistener\">JW.UI.ValueListener</a> - наблюдает за значением в DOM элементе текстового ввода и обновляет указанное строковое свойство</li>\n<li><a href=\"#!/guide/rujwuicheckedlistener\">JW.UI.CheckedListener</a> - наблюдает за выбором DOM чекбокса и обновляет указанное булевое свойство</li>\n<li><a href=\"#!/guide/rujwuiradiolistener\">JW.UI.RadioListener</a> - наблюдает за выбором DOM радиокнопок и обновляет указанное строковое свойство</li>\n</ul>\n\n\n<p>Например, вы можете использовать следующий алгоритм для изменения локализации\nвашего Web приложения без перезагрузки страницы:</p>\n\n<pre><code>var locale = {\n    en: {\n        hi: \"Hi\",\n        bye: \"Bye\"\n    },\n    ru: {\n        hi: \"Привет\",\n        bye: \"Пока\"\n    }\n};\nvar language = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"en\");\nvar hiFunctor = new <a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a>([ language ], function(language) {\n    return locale[language].hi;\n});\nvar byeFunctor = new <a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a>([ language ], function(language) {\n    return locale[language].bye;\n});\nnew <a href=\"#!/api/JW.UI.TextUpdater\" rel=\"JW.UI.TextUpdater\" class=\"docClass\">JW.UI.TextUpdater</a>($(\"#hi\"), hiFunctor.<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>);\nnew <a href=\"#!/api/JW.UI.TextUpdater\" rel=\"JW.UI.TextUpdater\" class=\"docClass\">JW.UI.TextUpdater</a>($(\"#bye\"), byeFunctor.<a href=\"#!/api/JW.Functor-property-target\" rel=\"JW.Functor-property-target\" class=\"docClass\">target</a>);\n// Теперь можно легко менять локализацию\nlanguage.<a href=\"#!/api/JW.Property-method-set\" rel=\"JW.Property-method-set\" class=\"docClass\">set</a>(\"ru\");\n</code></pre>\n","title":"JW.Property"});