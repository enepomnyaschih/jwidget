Ext.data.JsonP.JW_AbstractCollection_Lister({"tagname":"class","name":"JW.AbstractCollection.Lister","autodetected":{},"files":[{"filename":"lister.js","href":"lister2.html#JW-AbstractCollection-Lister"}],"extends":"JW.Class","members":[{"name":"target","tagname":"cfg","owner":"JW.AbstractCollection.Lister","id":"cfg-target","meta":{}},{"name":"_iid","tagname":"property","owner":"JW.Class","id":"property-_iid","meta":{}},{"name":"constructor","tagname":"property","owner":"JW.Class","id":"property-constructor","meta":{}},{"name":"source","tagname":"property","owner":"JW.AbstractCollection.Lister","id":"property-source","meta":{}},{"name":"target","tagname":"property","owner":"JW.AbstractCollection.Lister","id":"property-target","meta":{}},{"name":"constructor","tagname":"method","owner":"JW.AbstractCollection.Lister","id":"method-constructor","meta":{}},{"name":"_super","tagname":"method","owner":"JW.Class","id":"method-_super","meta":{}},{"name":"destroy","tagname":"method","owner":"JW.Class","id":"method-destroy","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-JW.AbstractCollection.Lister","short_doc":"&lt;T extends JW.Class, C extends JW.AbstractCollection&lt;T&gt;&gt;\n\nКонвертер в множество. ...","component":false,"superclasses":["JW.Class"],"subclasses":["JW.AbstractArray.Lister","JW.AbstractMap.Lister","JW.AbstractSet.Lister"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/JW.Class' rel='JW.Class' class='docClass'>JW.Class</a><div class='subclass '><strong>JW.AbstractCollection.Lister</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/JW.AbstractArray.Lister' rel='JW.AbstractArray.Lister' class='docClass'>JW.AbstractArray.Lister</a></div><div class='dependency'><a href='#!/api/JW.AbstractMap.Lister' rel='JW.AbstractMap.Lister' class='docClass'>JW.AbstractMap.Lister</a></div><div class='dependency'><a href='#!/api/JW.AbstractSet.Lister' rel='JW.AbstractSet.Lister' class='docClass'>JW.AbstractSet.Lister</a></div><h4>Files</h4><div class='dependency'><a href='source/lister2.html#JW-AbstractCollection-Lister' target='_blank'>lister.js</a></div></pre><div class='doc-contents'><p><code>&lt;T extends <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a>, C extends <a href=\"#!/api/JW.AbstractCollection\" rel=\"JW.AbstractCollection\" class=\"docClass\">JW.AbstractCollection</a>&lt;T&gt;&gt;</code></p>\n\n<p>Конвертер в множество. Преобразует исходную коллекцию в множество.</p>\n\n<p><strong>Замечание:</strong> Элементы исходной коллекции не должны повторяться.</p>\n\n<p>Создавайте конвертер с помощью метода <a href=\"#!/api/JW.AbstractCollection-method-createLister\" rel=\"JW.AbstractCollection-method-createLister\" class=\"docClass\">JW.AbstractCollection.createLister</a>:</p>\n\n<pre><code>var lister = collection.createLister();\nvar set = lister.target;\n</code></pre>\n\n<p>Метод сам определит, какая реализация конвертера лучше подойдет (простая или observable).</p>\n\n<p>Множество можно передать в качестве конфигурационной опции:</p>\n\n<pre><code>var set = new <a href=\"#!/api/JW.Set\" rel=\"JW.Set\" class=\"docClass\">JW.Set</a>();\nvar lister = collection.createLister({\n    target: set\n});\n</code></pre>\n\n<p>Правила работы конвертера:</p>\n\n<ul>\n<li>Целевое множество находится в поле <a href=\"#!/api/JW.AbstractCollection.Lister-property-target\" rel=\"JW.AbstractCollection.Lister-property-target\" class=\"docClass\">target</a>.</li>\n<li>При конструировании конвертера все элементы исходной коллекции сразу добавляются в <a href=\"#!/api/JW.AbstractCollection.Lister-property-target\" rel=\"JW.AbstractCollection.Lister-property-target\" class=\"docClass\">target</a>.</li>\n<li>При уничтожении конвертера все элементы исходной коллекции удаляются из <a href=\"#!/api/JW.AbstractCollection.Lister-property-target\" rel=\"JW.AbstractCollection.Lister-property-target\" class=\"docClass\">target</a>.</li>\n<li>Множество можно передать в качестве конфигурационной опции <a href=\"#!/api/JW.AbstractCollection.Lister-cfg-target\" rel=\"JW.AbstractCollection.Lister-cfg-target\" class=\"docClass\">target</a>.\nВ этом случае, вся забота о его уничтожении ложится на вас.</li>\n<li>Если <a href=\"#!/api/JW.AbstractCollection.Lister-cfg-target\" rel=\"JW.AbstractCollection.Lister-cfg-target\" class=\"docClass\">target</a> не передан, то он будет создан автоматически. Конвертер подберет наиболее подходящую\nреализацию <a href=\"#!/api/JW.AbstractCollection.Lister-property-target\" rel=\"JW.AbstractCollection.Lister-property-target\" class=\"docClass\">target</a> (простая или observable). В этом\nслучае, <a href=\"#!/api/JW.AbstractCollection.Lister-property-target\" rel=\"JW.AbstractCollection.Lister-property-target\" class=\"docClass\">target</a> будет уничтожен автоматически при уничтожении конвертера.</li>\n<li>Можно конвертировать несколько коллекций в одно и то же множество, если все элементы различны.</li>\n</ul>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-target' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Lister'>JW.AbstractCollection.Lister</span><br/><a href='source/lister2.html#JW-AbstractCollection-Lister-cfg-target' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Lister-cfg-target' class='name expandable'>target</a> : <a href=\"#!/api/JW.AbstractSet\" rel=\"JW.AbstractSet\" class=\"docClass\">JW.AbstractSet</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p><code>&lt;T&gt;</code> Целевое множество.</p>\n</div><div class='long'><p><code>&lt;T&gt;</code> Целевое множество.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-_iid' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-property-_iid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-_iid' class='name expandable'>_iid</a> : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Instance ID. ...</div><div class='long'><p>Instance ID.</p>\n\n<p>Автоинкрементный уникальный идентификатор объекта. Каждый экземпляр <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> получает такой идентификатор.\nИспользуется в множестве <a href=\"#!/api/JW.AbstractSet\" rel=\"JW.AbstractSet\" class=\"docClass\">JW.AbstractSet</a> в качестве ключа словаря для быстрого поиска.</p>\n</div></div></div><div id='property-constructor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-property-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-constructor' class='name expandable'>constructor</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Конструктор как класс. ...</div><div class='long'><p>Конструктор как класс. Если в вашем распоряжении есть некоторый объект, то вы с легкостью можете узнать его класс\nвоспользовавшись полем <a href=\"#!/api/JW.Class-property-constructor\" rel=\"JW.Class-property-constructor\" class=\"docClass\">constructor</a>.</p>\n</div></div></div><div id='property-source' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Lister'>JW.AbstractCollection.Lister</span><br/><a href='source/lister2.html#JW-AbstractCollection-Lister-property-source' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Lister-property-source' class='name expandable'>source</a> : C<span class=\"signature\"></span></div><div class='description'><div class='short'><p>Исходная коллекция.</p>\n</div><div class='long'><p>Исходная коллекция.</p>\n</div></div></div><div id='property-target' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Lister'>JW.AbstractCollection.Lister</span><br/><a href='source/lister2.html#JW-AbstractCollection-Lister-property-target' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.AbstractCollection.Lister-property-target' class='name expandable'>target</a> : <a href=\"#!/api/JW.AbstractSet\" rel=\"JW.AbstractSet\" class=\"docClass\">JW.AbstractSet</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p><code>&lt;T&gt;</code> Целевое множество.</p>\n</div><div class='long'><p><code>&lt;T&gt;</code> Целевое множество.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.AbstractCollection.Lister'>JW.AbstractCollection.Lister</span><br/><a href='source/lister2.html#JW-AbstractCollection-Lister-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/JW.AbstractCollection.Lister-method-constructor' class='name expandable'>JW.AbstractCollection.Lister</a>( <span class='pre'>source, config</span> ) : <a href=\"#!/api/JW.AbstractCollection.Lister\" rel=\"JW.AbstractCollection.Lister\" class=\"docClass\">JW.AbstractCollection.Lister</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Конструирует конвертер. ...</div><div class='long'><p>Конструирует конвертер. Предпочтительнее использовать метод <a href=\"#!/api/JW.AbstractCollection-method-createLister\" rel=\"JW.AbstractCollection-method-createLister\" class=\"docClass\">JW.AbstractCollection.createLister</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : <a href=\"#!/api/JW.AbstractCollection\" rel=\"JW.AbstractCollection\" class=\"docClass\">JW.AbstractCollection</a><div class='sub-desc'><p><code>&lt;T&gt;</code> Исходная коллекция.</p>\n</div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>Конфигурация (см. Config options).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.AbstractCollection.Lister\" rel=\"JW.AbstractCollection.Lister\" class=\"docClass\">JW.AbstractCollection.Lister</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_super' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-_super' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-_super' class='name expandable'>_super</a>( <span class='pre'></span> ) : Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>Этот метод доступен только внутри методов класса, переданных в функцию JW.extend при создании данного класса. ...</div><div class='long'><p>Этот метод доступен только внутри методов класса, переданных в функцию <a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a> при создании данного класса. Метод\n<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a> - это простой способ вызова того же метода базового класса:</p>\n\n<pre><code>...\n// Метод класса\nmyMethod: function(a, b, c) {\n    return this._super(a, b) + c;\n}\n...\n</code></pre>\n\n<p>Эквивалентный вариант:</p>\n\n<pre><code>...\n// Метод класса\nmyMethod: function(a, b, c) {\n    return MyClass.superclass.myMethod.call(this, a, b) + c;\n}\n...\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Деструктор класса. ...</div><div class='long'><p>Деструктор класса. Сюда рекомендуется помещать всю логику уничтожения экземпляра класса. Этот метод нужно явно\nвызывать снаружи, поскольку JavaScript не поддерживает автоматические деструкторы классов. Этот метод можно\nперегружать, не забывая вызывать деструктор базового класса:</p>\n\n<pre><code>destroy: function() {\n    // Освобождаем ресурсы\n    ...\n    // Вызываем деструктор базового класса\n    this._super();\n}\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});