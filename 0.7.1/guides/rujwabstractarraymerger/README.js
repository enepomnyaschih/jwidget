Ext.data.JsonP.rujwabstractarraymerger({"guide":"<h1 id='rujwabstractarraymerger-section-jw.abstractarray.merger'>JW.AbstractArray.Merger</h1>\n\n<p>Это краткое описание класса на русском языке.</p>\n\n<p>Полная документация на английском: <a href=\"#!/api/JW.AbstractArray.Merger\" rel=\"JW.AbstractArray.Merger\" class=\"docClass\">JW.AbstractArray.Merger</a></p>\n\n<p><code>&lt;T&gt;</code></p>\n\n<p>Объединитель массивов. Создает массив, содержащий все элементы исходных массивов в том же порядке.</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.ObservableArray\" rel=\"JW.ObservableArray\" class=\"docClass\">JW.ObservableArray</a>([\n    new <a href=\"#!/api/JW.Array\" rel=\"JW.Array\" class=\"docClass\">JW.Array</a>([1, 2, 3]),\n    new <a href=\"#!/api/JW.ObservableArray\" rel=\"JW.ObservableArray\" class=\"docClass\">JW.ObservableArray</a>(),\n    new <a href=\"#!/api/JW.Array\" rel=\"JW.Array\" class=\"docClass\">JW.Array</a>([4])\n]);\nvar merger = source.<a href=\"#!/api/JW.AbstractArray-method-createMerger\" rel=\"JW.AbstractArray-method-createMerger\" class=\"docClass\">createMerger</a>();\nassert(merger.<a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.AbstractArray-method-equal\" rel=\"JW.AbstractArray-method-equal\" class=\"docClass\">equal</a>([1, 2, 3, 4]));\n\nsource.<a href=\"#!/api/JW.AbstractArray-method-add\" rel=\"JW.AbstractArray-method-add\" class=\"docClass\">add</a>(new <a href=\"#!/api/JW.Array\" rel=\"JW.Array\" class=\"docClass\">JW.Array</a>([5, 6]));\nassert(merger.<a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.AbstractArray-method-equal\" rel=\"JW.AbstractArray-method-equal\" class=\"docClass\">equal</a>([1, 2, 3, 4, 5, 6]));\n\nsource.<a href=\"#!/api/JW.AbstractArray-method-get\" rel=\"JW.AbstractArray-method-get\" class=\"docClass\">get</a>(1).<a href=\"#!/api/JW.AbstractArray-method-addAll\" rel=\"JW.AbstractArray-method-addAll\" class=\"docClass\">addAll</a>([7, 8, 9]);\nassert(merger.<a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.AbstractArray-method-equal\" rel=\"JW.AbstractArray-method-equal\" class=\"docClass\">equal</a>([1, 2, 3, 7, 8, 9, 4, 5, 6]));\n</code></pre>\n\n<p>Создавайте синхронизатор с помощью метода <a href=\"#!/api/JW.AbstractArray-method-createMerger\" rel=\"JW.AbstractArray-method-createMerger\" class=\"docClass\">JW.AbstractArray.createMerger</a>:</p>\n\n<pre><code>var merger = array.<a href=\"#!/api/JW.AbstractArray-method-createMerger\" rel=\"JW.AbstractArray-method-createMerger\" class=\"docClass\">createMerger</a>();\nvar array = merger.<a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a>;\n</code></pre>\n\n<p>Метод сам определит, какая реализация синхронизатора лучше подойдет (простая или observable).</p>\n\n<p>Целевой массив можно передать в качестве конфигурационной опции:</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.Array\" rel=\"JW.Array\" class=\"docClass\">JW.Array</a>();\nvar target = new <a href=\"#!/api/JW.Array\" rel=\"JW.Array\" class=\"docClass\">JW.Array</a>();\nvar merger = source.<a href=\"#!/api/JW.AbstractArray-method-createMerger\" rel=\"JW.AbstractArray-method-createMerger\" class=\"docClass\">createMerger</a>({\n    <a href=\"#!/api/JW.AbstractArray.Merger-cfg-target\" rel=\"JW.AbstractArray.Merger-cfg-target\" class=\"docClass\">target</a>: target\n});\n</code></pre>\n\n<p>Правила работы синхронизатора:</p>\n\n<ul>\n<li>Целевой массив находится в поле <a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a>.</li>\n<li>Перед конструированием синхронизатора целевой массив должен быть пуст, в целевой массив нельзя добавлять элементы\nвручную, нельзя создавать другие синхронизаторы с тем же целевым массивом.</li>\n<li>При конструировании синхронизатора все элементы исходных коллекций сразу добавляются в <a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a>.</li>\n<li>При уничтожении синхронизатора все элементы исходных коллекций удаляются из <a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a>.</li>\n<li>Целевой массив можно передать в качестве конфигурационной опции <a href=\"#!/api/JW.AbstractArray.Merger-cfg-target\" rel=\"JW.AbstractArray.Merger-cfg-target\" class=\"docClass\">target</a>.\nВ этом случае, вся забота о его уничтожении ложится на вас.</li>\n<li>Если <a href=\"#!/api/JW.AbstractArray.Merger-cfg-target\" rel=\"JW.AbstractArray.Merger-cfg-target\" class=\"docClass\">target</a> не передан, то он будет создан автоматически. Синхронизатор подберет наиболее подходящую\nреализацию <a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a> (простая или observable). В этом\nслучае, <a href=\"#!/api/JW.AbstractArray.Merger-property-target\" rel=\"JW.AbstractArray.Merger-property-target\" class=\"docClass\">target</a> будет уничтожен автоматически при уничтожении синхронизатора.</li>\n</ul>\n\n","title":"JW.AbstractArray.Merger"});