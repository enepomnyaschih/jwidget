Ext.data.JsonP.rujwabstractcollectionfilterer({"guide":"<h1 id='rujwabstractcollectionfilterer-section-jw.abstractcollection.filterer'>JW.AbstractCollection.Filterer</h1>\n\n<p>Это краткое описание класса на русском языке.</p>\n\n<p>Полная документация на английском: <a href=\"#!/api/JW.AbstractCollection.Filterer\" rel=\"JW.AbstractCollection.Filterer\" class=\"docClass\">JW.AbstractCollection.Filterer</a></p>\n\n<p><code>&lt;T, C extends <a href=\"#!/api/JW.AbstractCollection\" rel=\"JW.AbstractCollection\" class=\"docClass\">JW.AbstractCollection</a>&lt;T&gt;&gt;</code></p>\n\n<p>Фильтровщик коллекции. Создает новую коллекцию того же типа, включающую только те\nэлементы исходной коллекции, для которых указанная функция возвращает значение !== false.\nДля массива синхронизатор сохранит порядок элементов.</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.ObservableArray\" rel=\"JW.ObservableArray\" class=\"docClass\">JW.ObservableArray</a>([1, 2, 3]);\nvar filterer = source.<a href=\"#!/api/JW.AbstractCollection-method-createFilterer\" rel=\"JW.AbstractCollection-method-createFilterer\" class=\"docClass\">createFilterer</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Filterer-cfg-filterItem\" rel=\"JW.AbstractCollection.Filterer-cfg-filterItem\" class=\"docClass\">filterItem</a>: function(x) { return x % 2 === 1; }\n});\nassert(filterer.<a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.AbstractArray-method-equal\" rel=\"JW.AbstractArray-method-equal\" class=\"docClass\">equal</a>([1, 3]));\n\nsource.<a href=\"#!/api/JW.AbstractArray-method-addAll\" rel=\"JW.AbstractArray-method-addAll\" class=\"docClass\">addAll</a>([4, 7, 1, 6]);\nassert(filterer.<a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.AbstractArray-method-equal\" rel=\"JW.AbstractArray-method-equal\" class=\"docClass\">equal</a>([1, 3, 7, 1]));\n\nsource.<a href=\"#!/api/JW.AbstractArray-method-move\" rel=\"JW.AbstractArray-method-move\" class=\"docClass\">move</a>(2, 6); // move \"3\" item to the end\nassert(filterer.<a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a>.<a href=\"#!/api/JW.AbstractArray-method-equal\" rel=\"JW.AbstractArray-method-equal\" class=\"docClass\">equal</a>([1, 7, 1, 3]));\n</code></pre>\n\n<p>Создавайте синхронизатор с помощью метода <a href=\"#!/api/JW.AbstractCollection-method-createFilterer\" rel=\"JW.AbstractCollection-method-createFilterer\" class=\"docClass\">JW.AbstractCollection.createFilterer</a>.\nМетод сам определит, какая реализация синхронизатора лучше подойдет (простая или observable).</p>\n\n<p>Целевую коллекцию можно передать в качестве конфигурационной опции:</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.Set\" rel=\"JW.Set\" class=\"docClass\">JW.Set</a>();\nvar target = new <a href=\"#!/api/JW.Set\" rel=\"JW.Set\" class=\"docClass\">JW.Set</a>();\nvar filterer = source.<a href=\"#!/api/JW.AbstractCollection-method-createFilterer\" rel=\"JW.AbstractCollection-method-createFilterer\" class=\"docClass\">createFilterer</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Filterer-cfg-target\" rel=\"JW.AbstractCollection.Filterer-cfg-target\" class=\"docClass\">target</a>: target,\n    <a href=\"#!/api/JW.AbstractCollection.Filterer-cfg-filterItem\" rel=\"JW.AbstractCollection.Filterer-cfg-filterItem\" class=\"docClass\">filterItem</a>: this._filterItem,\n    <a href=\"#!/api/JW.AbstractCollection.Filterer-cfg-scope\" rel=\"JW.AbstractCollection.Filterer-cfg-scope\" class=\"docClass\">scope</a>: this\n});\n</code></pre>\n\n<p>Правила работы синхронизатора:</p>\n\n<ul>\n<li>Целевая коллекция находится в поле <a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a>.</li>\n<li>При конструировании синхронизатора отфильтрованные элементы исходной коллекции сразу добавляются в\n<a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a>.</li>\n<li>При уничтожении синхронизатора все элементы удаляются из <a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a>.</li>\n<li>Целевую коллекцию можно передать в качестве конфигурационной опции <a href=\"#!/api/JW.AbstractCollection.Filterer-cfg-target\" rel=\"JW.AbstractCollection.Filterer-cfg-target\" class=\"docClass\">target</a>.\nВ этом случае, вся забота о ее уничтожении ложится на вас (хотя элементы будут из нее удалены автоматически\nпри уничтожении синхронизатора).</li>\n<li>Если <a href=\"#!/api/JW.AbstractCollection.Filterer-cfg-target\" rel=\"JW.AbstractCollection.Filterer-cfg-target\" class=\"docClass\">target</a> не передан, то он будет создан автоматически. Синхронизатор подберет наиболее подходящую\nреализацию <a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a> (простая или observable). В этом\nслучае, <a href=\"#!/api/JW.AbstractCollection.Filterer-property-target\" rel=\"JW.AbstractCollection.Filterer-property-target\" class=\"docClass\">target</a> будет уничтожен автоматически при уничтожении синхронизатора.</li>\n</ul>\n\n\n<p><strong>Дополнительные правила для различных типов коллекций</strong></p>\n\n<p><a href=\"#!/api/JW.AbstractArray\" rel=\"JW.AbstractArray\" class=\"docClass\">JW.AbstractArray</a>:</p>\n\n<ul>\n<li>При конструировании синхронизатора целевая коллекция должна быть пуста.</li>\n<li>Целевую коллекцию можно синхронизировать только с одной исходной коллекцией.</li>\n</ul>\n\n\n<p><a href=\"#!/api/JW.AbstractMap\" rel=\"JW.AbstractMap\" class=\"docClass\">JW.AbstractMap</a>:</p>\n\n<ul>\n<li>Целевую коллекцию можно синхронизировать с несколькими исходными коллекциями, если ключи всех элементов различны.</li>\n<li>В целевую коллекцию можно добавлять элементы вручную, если их ключи не пересекаются с ключами других элементов.</li>\n</ul>\n\n\n<p><a href=\"#!/api/JW.AbstractSet\" rel=\"JW.AbstractSet\" class=\"docClass\">JW.AbstractSet</a>:</p>\n\n<ul>\n<li>Целевую коллекцию можно синхронизировать с несколькими исходными коллекциями, если все элементы различны.</li>\n<li>В целевую коллекцию можно добавлять элементы вручную, если они не пересекаются с другими элементами.</li>\n</ul>\n\n","title":"JW.AbstractCollection.Filterer"});