Ext.data.JsonP.rujwabstractcollectionorderer({"guide":"<h1 id='rujwabstractcollectionorderer-section-jw.abstractcollection.orderer'>JW.AbstractCollection.Orderer</h1>\n\n<p>Это краткое описание класса на русском языке.</p>\n\n<p>Полная документация на английском: <a href=\"#!/api/JW.AbstractCollection.Orderer\" rel=\"JW.AbstractCollection.Orderer\" class=\"docClass\">JW.AbstractCollection.Orderer</a></p>\n\n<p><code>&lt;T extends <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a>, C extends <a href=\"#!/api/JW.AbstractCollection\" rel=\"JW.AbstractCollection\" class=\"docClass\">JW.AbstractCollection</a>&lt;T&gt;&gt;</code></p>\n\n<p>Конвертер в массив (упорядочитель). Преобразует исходную коллекцию в массив. Новые элементы добавляются в конец\nмассива. Если исходная коллекция наблюдаемая (observable), начинает непрерывную синхронизацию.</p>\n\n<pre><code>var map = new <a href=\"#!/api/JW.ObservableMap\" rel=\"JW.ObservableMap\" class=\"docClass\">JW.ObservableMap</a>({a: \"A\", b: \"B\"});\nvar orderer = map.<a href=\"#!/api/JW.ObservableMap-method-createOrderer\" rel=\"JW.ObservableMap-method-createOrderer\" class=\"docClass\">createOrderer</a>();\nvar array = orderer.<a href=\"#!/api/JW.AbstractCollection.Orderer-property-target\" rel=\"JW.AbstractCollection.Orderer-property-target\" class=\"docClass\">target</a>;\n\nassert(array.<a href=\"#!/api/JW.AbstractArray-method-get\" rel=\"JW.AbstractArray-method-get\" class=\"docClass\">get</a>(0) === \"A\");\nassert(array.<a href=\"#!/api/JW.AbstractArray-method-get\" rel=\"JW.AbstractArray-method-get\" class=\"docClass\">get</a>(1) === \"B\");\n\n// Целевой массив автоматически синхронизируется с исходной наблюдаемой коллекцией\nmap.<a href=\"#!/api/JW.AbstractMap-method-set\" rel=\"JW.AbstractMap-method-set\" class=\"docClass\">set</a>(\"C\", \"c\");\nassert(array.<a href=\"#!/api/JW.AbstractArray-method-get\" rel=\"JW.AbstractArray-method-get\" class=\"docClass\">get</a>(2) === \"C\");\n\norderer.<a href=\"#!/api/JW.AbstractCollection.Orderer-method-destroy\" rel=\"JW.AbstractCollection.Orderer-method-destroy\" class=\"docClass\">destroy</a>();\n</code></pre>\n\n<p><strong>Замечание:</strong> Элементы исходной коллекции не должны повторяться.</p>\n\n<p>Создавайте конвертер с помощью метода <a href=\"#!/api/JW.AbstractCollection-method-createOrderer\" rel=\"JW.AbstractCollection-method-createOrderer\" class=\"docClass\">JW.AbstractCollection.createOrderer</a>.\nМетод сам определит, какая реализация конвертера лучше подойдет (простая или observable).</p>\n\n<p>Массив можно передать в качестве конфигурационной опции:</p>\n\n<pre><code>var array = new <a href=\"#!/api/JW.Array\" rel=\"JW.Array\" class=\"docClass\">JW.Array</a>();\nvar orderer = collection.<a href=\"#!/api/JW.AbstractCollection-method-createOrderer\" rel=\"JW.AbstractCollection-method-createOrderer\" class=\"docClass\">createOrderer</a>({\n    <a href=\"#!/api/JW.AbstractCollection.Orderer-cfg-target\" rel=\"JW.AbstractCollection.Orderer-cfg-target\" class=\"docClass\">target</a>: array\n});\n</code></pre>\n\n<p>В простых случаях, вы можете использовать упрощенный метод <a href=\"#!/api/JW.AbstractCollection-method-S-S-toArray\" rel=\"JW.AbstractCollection-method-S-S-toArray\" class=\"docClass\">JW.AbstractCollection.$$toArray</a>. Он сразу возвращает целевой массив:</p>\n\n<pre><code>var map = new <a href=\"#!/api/JW.ObservableMap\" rel=\"JW.ObservableMap\" class=\"docClass\">JW.ObservableMap</a>({a: \"A\", b: \"B\"});\nvar array = map.<a href=\"#!/api/JW.ObservableMap-method-S-S-toArray\" rel=\"JW.ObservableMap-method-S-S-toArray\" class=\"docClass\">$$toArray</a>();\n\nassert(array.<a href=\"#!/api/JW.AbstractArray-method-get\" rel=\"JW.AbstractArray-method-get\" class=\"docClass\">get</a>(0) === \"A\");\nassert(array.<a href=\"#!/api/JW.AbstractArray-method-get\" rel=\"JW.AbstractArray-method-get\" class=\"docClass\">get</a>(1) === \"B\");\n\n// Целевой массив автоматически синхронизируется с исходной наблюдаемой коллекцией\nmap.<a href=\"#!/api/JW.AbstractMap-method-set\" rel=\"JW.AbstractMap-method-set\" class=\"docClass\">set</a>(\"C\", \"c\");\nassert(array.<a href=\"#!/api/JW.AbstractArray-method-get\" rel=\"JW.AbstractArray-method-get\" class=\"docClass\">get</a>(2) === \"C\");\n\narray.<a href=\"#!/api/JW.AbstractArray-method-destroy\" rel=\"JW.AbstractArray-method-destroy\" class=\"docClass\">destroy</a>();\n</code></pre>\n\n<p>Правила работы конвертера:</p>\n\n<ul>\n<li>Целевой массив находится в поле <a href=\"#!/api/JW.AbstractCollection.Orderer-property-target\" rel=\"JW.AbstractCollection.Orderer-property-target\" class=\"docClass\">target</a>.</li>\n<li>При конструировании конвертера все элементы исходной коллекции сразу добавляются в <a href=\"#!/api/JW.AbstractCollection.Orderer-property-target\" rel=\"JW.AbstractCollection.Orderer-property-target\" class=\"docClass\">target</a>.</li>\n<li>При уничтожении конвертера все элементы исходной коллекции удаляются из <a href=\"#!/api/JW.AbstractCollection.Orderer-property-target\" rel=\"JW.AbstractCollection.Orderer-property-target\" class=\"docClass\">target</a>.</li>\n<li>Массив можно передать в качестве конфигурационной опции <a href=\"#!/api/JW.AbstractCollection.Orderer-cfg-target\" rel=\"JW.AbstractCollection.Orderer-cfg-target\" class=\"docClass\">target</a>.\nВ этом случае, вся забота о его уничтожении ложится на вас.</li>\n<li>Если <a href=\"#!/api/JW.AbstractCollection.Orderer-cfg-target\" rel=\"JW.AbstractCollection.Orderer-cfg-target\" class=\"docClass\">target</a> не передан, то он будет создан автоматически. Конвертер подберет наиболее подходящую\nреализацию <a href=\"#!/api/JW.AbstractCollection.Orderer-property-target\" rel=\"JW.AbstractCollection.Orderer-property-target\" class=\"docClass\">target</a> (простая или observable). В этом\nслучае, <a href=\"#!/api/JW.AbstractCollection.Orderer-property-target\" rel=\"JW.AbstractCollection.Orderer-property-target\" class=\"docClass\">target</a> будет уничтожен автоматически при уничтожении конвертера.</li>\n<li>Можно конвертировать несколько коллекций в один и тот же массив, если все элементы различны.</li>\n</ul>\n\n","title":"JW.AbstractCollection.Orderer"});