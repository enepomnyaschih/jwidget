Ext.data.JsonP.JW_Mapper({"tagname":"class","name":"JW.Mapper","autodetected":{},"files":[{"filename":"mapper.js","href":"mapper8.html#JW-Mapper"}],"extends":"JW.Class","members":[{"name":"acceptNull","tagname":"cfg","owner":"JW.Mapper","id":"cfg-acceptNull","meta":{}},{"name":"createValue","tagname":"cfg","owner":"JW.Mapper","id":"cfg-createValue","meta":{}},{"name":"destroyValue","tagname":"cfg","owner":"JW.Mapper","id":"cfg-destroyValue","meta":{}},{"name":"scope","tagname":"cfg","owner":"JW.Mapper","id":"cfg-scope","meta":{}},{"name":"target","tagname":"cfg","owner":"JW.Mapper","id":"cfg-target","meta":{}},{"name":"_iid","tagname":"property","owner":"JW.Class","id":"property-_iid","meta":{}},{"name":"constructor","tagname":"property","owner":"JW.Class","id":"property-constructor","meta":{}},{"name":"sources","tagname":"property","owner":"JW.Mapper","id":"property-sources","meta":{}},{"name":"target","tagname":"property","owner":"JW.Mapper","id":"property-target","meta":{}},{"name":"constructor","tagname":"method","owner":"JW.Mapper","id":"method-constructor","meta":{}},{"name":"_super","tagname":"method","owner":"JW.Class","id":"method-_super","meta":{}},{"name":"bind","tagname":"method","owner":"JW.Mapper","id":"method-bind","meta":{"chainable":true}},{"name":"destroy","tagname":"method","owner":"JW.Class","id":"method-destroy","meta":{}},{"name":"destroyObject","tagname":"method","owner":"JW.Class","id":"method-destroyObject","meta":{}},{"name":"own","tagname":"method","owner":"JW.Class","id":"method-own","meta":{}},{"name":"update","tagname":"method","owner":"JW.Mapper","id":"method-update","meta":{}},{"name":"watch","tagname":"method","owner":"JW.Mapper","id":"method-watch","meta":{"chainable":true}}],"alternateClassNames":[],"aliases":{},"id":"class-JW.Mapper","short_doc":"&lt;T&gt; Watches source properties modification and recreates\na target property using specified functions. ...","component":false,"superclasses":["JW.Class"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/JW.Class' rel='JW.Class' class='docClass'>JW.Class</a><div class='subclass '><strong>JW.Mapper</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/mapper8.html#JW-Mapper' target='_blank'>mapper.js</a></div></pre><div class='doc-contents'><p><code>&lt;T&gt;</code> Watches source <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">properties</a> modification and recreates\na target property using specified functions. Unlike <a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a>,\nlets you destroy a previously created value. Also, mapper resets the target\nproperty value to null on destruction.</p>\n\n<pre><code>var count = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(1);\nvar units = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(\"apples\");\nvar target = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>();\n// Next command prints \"Init 1 apples\" to console\nvar mapper = new <a href=\"#!/api/JW.Mapper\" rel=\"JW.Mapper\" class=\"docClass\">JW.Mapper</a>([ count, units ], {\n    <a href=\"#!/api/JW.Mapper-cfg-target\" rel=\"JW.Mapper-cfg-target\" class=\"docClass\">target</a>: target,\n    <a href=\"#!/api/JW.Mapper-cfg-createValue\" rel=\"JW.Mapper-cfg-createValue\" class=\"docClass\">createValue</a>: function(value, units) {\n        var result = value + \" \" + units;\n        console.log(\"Init \" + result);\n        return result;\n    },\n    <a href=\"#!/api/JW.Mapper-cfg-destroyValue\" rel=\"JW.Mapper-cfg-destroyValue\" class=\"docClass\">destroyValue</a>: function(result, value, units) {\n        console.log(\"Done \" + result);\n    },\n    <a href=\"#!/api/JW.Mapper-cfg-scope\" rel=\"JW.Mapper-cfg-scope\" class=\"docClass\">scope</a>: this\n});\nassert(\"1 apples\", target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n\n// Next command prints \"Done 1 apples\" and \"Init 2 apples\"\ncount.<a href=\"#!/api/JW.Property-method-set\" rel=\"JW.Property-method-set\" class=\"docClass\">set</a>(2);\nassert(\"2 apples\", target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n\n// Next command prints \"Done 2 apples\"\nmapper.<a href=\"#!/api/JW.Mapper-method-destroy\" rel=\"JW.Mapper-method-destroy\" class=\"docClass\">destroy</a>();\nassert(null, target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\n</code></pre>\n\n<p>If target is omitted in constructor, it is created automatically. Notice\nthat mapper owns it in this case.</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(1);\nvar mapper = new <a href=\"#!/api/JW.Mapper\" rel=\"JW.Mapper\" class=\"docClass\">JW.Mapper</a>([ source ], {\n    <a href=\"#!/api/JW.Mapper-cfg-createValue\" rel=\"JW.Mapper-cfg-createValue\" class=\"docClass\">createValue</a>: function(value) {\n        return value + \" apples\";\n    },\n    <a href=\"#!/api/JW.Mapper-cfg-scope\" rel=\"JW.Mapper-cfg-scope\" class=\"docClass\">scope</a>: this\n});\nvar target = mapper.<a href=\"#!/api/JW.Mapper-property-target\" rel=\"JW.Mapper-property-target\" class=\"docClass\">target</a>;\nassert(\"1 apples\", target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\nmapper.<a href=\"#!/api/JW.Mapper-method-destroy\" rel=\"JW.Mapper-method-destroy\" class=\"docClass\">destroy</a>();\n</code></pre>\n\n<p>In simple cases, <a href=\"#!/api/JW.Property-method-S-S-mapValue\" rel=\"JW.Property-method-S-S-mapValue\" class=\"docClass\">JW.Property.$$mapValue</a> and <a href=\"#!/api/JW.Property-method-S-S-mapObject\" rel=\"JW.Property-method-S-S-mapObject\" class=\"docClass\">JW.Property.$$mapObject</a> shorthand methods\ncan be used instead. They return the target property right away:</p>\n\n<pre><code>var source = new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>(1);\nvar target = source.<a href=\"#!/api/JW.Property-method-S-S-mapValue\" rel=\"JW.Property-method-S-S-mapValue\" class=\"docClass\">$$mapValue</a>(function(value) { return value + \" apples\"; });\nassert(\"1 apples\", target.<a href=\"#!/api/JW.Property-method-get\" rel=\"JW.Property-method-get\" class=\"docClass\">get</a>());\ntarget.<a href=\"#!/api/JW.Property-method-destroy\" rel=\"JW.Property-method-destroy\" class=\"docClass\">destroy</a>();\n</code></pre>\n\n<p>On source property change, next flow will take a place:</p>\n\n<ol>\n<li>New value is created</li>\n<li>Target property is set to new value</li>\n<li>Old value is destroyed</li>\n</ol>\n\n\n<p>In contrast, <a href=\"#!/api/JW.Switcher\" rel=\"JW.Switcher\" class=\"docClass\">JW.Switcher</a>'s flow is opposite:</p>\n\n<ol>\n<li><a href=\"#!/api/JW.Switcher-cfg-done\" rel=\"JW.Switcher-cfg-done\" class=\"docClass\">done</a> method is called</li>\n<li><a href=\"#!/api/JW.Switcher-cfg-init\" rel=\"JW.Switcher-cfg-init\" class=\"docClass\">init</a> method is called</li>\n</ol>\n\n\n<p>Common use case for mapper is replaceable child component creation by data:</p>\n\n<pre><code>var MyComponent = function(document) {\n    MyComponent.<a href=\"#!/api/JW.Class-static-property-_super\" rel=\"JW.Class-static-property-_super\" class=\"docClass\">_super</a>.call(this);\n    this.document = document;\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(MyComponent, <a href=\"#!/api/JW.UI.Component\" rel=\"JW.UI.Component\" class=\"docClass\">JW.UI.Component</a>, {\n    // <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>&lt;Document&gt; document;\n\n    renderDocument: function() {\n        return this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(this.document.<a href=\"#!/api/JW.Property-method-S-S-mapObject\" rel=\"JW.Property-method-S-S-mapObject\" class=\"docClass\">$$mapObject</a>(function(document) {\n            return new DocumentView(document);\n        }, this);\n    }\n});\n\n<a href=\"#!/api/JW.UI-static-method-template\" rel=\"JW.UI-static-method-template\" class=\"docClass\">JW.UI.template</a>(MyComponent, {\n    main:\n        '&lt;div jwclass=\"my-component\"&gt;' +\n            '&lt;div jwid=\"document\"&gt;&lt;/div&gt;' +\n        '&lt;/div&gt;'\n});\n</code></pre>\n\n<p>Also, mapper allows you to chain property calculations. Assume that you have several folders and\nseveral documents in each folder. One folder is selected, and each folder has a selected document there. You\nwant to create a document view by a currently selected folder and a currently selected document there. Do this:</p>\n\n<pre><code>var Folder = function() {\n    Folder.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>.call(this);\n    this.selectedDocument = this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>());\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(Folder, <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a>);\n\nvar App = function() {\n    App.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>.call(this);\n    this.selectedFolder = this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>());\n    this.documentView = this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>());\n    this.<a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a>(new <a href=\"#!/api/JW.Mapper\" rel=\"JW.Mapper\" class=\"docClass\">JW.Mapper</a>([this.selectedFolder], {\n        <a href=\"#!/api/JW.Mapper-cfg-createValue\" rel=\"JW.Mapper-cfg-createValue\" class=\"docClass\">createValue</a>: function(folder) {\n            return new <a href=\"#!/api/JW.Mapper\" rel=\"JW.Mapper\" class=\"docClass\">JW.Mapper</a>([folder.selectedDocument], {\n                <a href=\"#!/api/JW.Mapper-cfg-target\" rel=\"JW.Mapper-cfg-target\" class=\"docClass\">target</a>: this.documentView,\n                <a href=\"#!/api/JW.Mapper-cfg-createValue\" rel=\"JW.Mapper-cfg-createValue\" class=\"docClass\">createValue</a>: function(document) {\n                    return new DocumentView(folder, document);\n                },\n                <a href=\"#!/api/JW.Mapper-cfg-destroyValue\" rel=\"JW.Mapper-cfg-destroyValue\" class=\"docClass\">destroyValue</a>: <a href=\"#!/api/JW-static-method-destroy\" rel=\"JW-static-method-destroy\" class=\"docClass\">JW.destroy</a>,\n                <a href=\"#!/api/JW.Mapper-cfg-scope\" rel=\"JW.Mapper-cfg-scope\" class=\"docClass\">scope</a>: this\n            });\n        },\n        <a href=\"#!/api/JW.Mapper-cfg-destroyValue\" rel=\"JW.Mapper-cfg-destroyValue\" class=\"docClass\">destroyValue</a>: <a href=\"#!/api/JW-static-method-destroy\" rel=\"JW-static-method-destroy\" class=\"docClass\">JW.destroy</a>,\n        <a href=\"#!/api/JW.Mapper-cfg-scope\" rel=\"JW.Mapper-cfg-scope\" class=\"docClass\">scope</a>: this\n    }));\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(App, <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a>);\n</code></pre>\n\n<p>By default, mapper doesn't calls the callbacks if at least one of the source values is null. You can change it\nvia <a href=\"#!/api/JW.Mapper-cfg-acceptNull\" rel=\"JW.Mapper-cfg-acceptNull\" class=\"docClass\">acceptNull</a> option.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-acceptNull' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-cfg-acceptNull' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-cfg-acceptNull' class='name expandable'>acceptNull</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Optional. ...</div><div class='long'><p>Optional. If false, functions won't be called if at least one of the source values is null. Target value\nis resetted to null in this case.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-createValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-cfg-createValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-cfg-createValue' class='name expandable'>createValue</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>createValue(... ...</div><div class='long'><p><code>createValue(... sourceValues): T</code></p>\n\n<p>Calculates target property value based on source property values.</p>\n</div></div></div><div id='cfg-destroyValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-cfg-destroyValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-cfg-destroyValue' class='name expandable'>destroyValue</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>destroyValue(targetValue: T, ... ...</div><div class='long'><p><code>destroyValue(targetValue: T, ... sourceValues)</code></p>\n\n<p>Optional. Destroys target property value.</p>\n</div></div></div><div id='cfg-scope' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-cfg-scope' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-cfg-scope' class='name expandable'>scope</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Optional. ...</div><div class='long'><p>Optional. Call scope of <a href=\"#!/api/JW.Mapper-cfg-createValue\" rel=\"JW.Mapper-cfg-createValue\" class=\"docClass\">createValue</a> and <a href=\"#!/api/JW.Mapper-cfg-destroyValue\" rel=\"JW.Mapper-cfg-destroyValue\" class=\"docClass\">destroyValue</a>.</p>\n</div></div></div><div id='cfg-target' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-cfg-target' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-cfg-target' class='name expandable'>target</a> : <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a><span class=\"signature\"></span></div><div class='description'><div class='short'>&lt;T&gt; Target property. ...</div><div class='long'><p><code>&lt;T&gt;</code> Target property. By default, created automatically.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-_iid' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-property-_iid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-_iid' class='name expandable'>_iid</a> : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Instance ID. ...</div><div class='long'><p>Instance ID.</p>\n\n<p>Auto-incremental object unique ID. Each <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> instance gets such identifier.\nUsed in <a href=\"#!/api/JW.AbstractSet\" rel=\"JW.AbstractSet\" class=\"docClass\">JW.AbstractSet</a> as map key for quick item access.</p>\n</div></div></div><div id='property-constructor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-property-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-constructor' class='name expandable'>constructor</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructor as class. ...</div><div class='long'><p>Constructor as class. If you have an object, you can get its class using this field.</p>\n</div></div></div><div id='property-sources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-property-sources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-property-sources' class='name expandable'>sources</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'><p><code>&lt;<a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>&gt;</code> Source properties.</p>\n</div><div class='long'><p><code>&lt;<a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>&gt;</code> Source properties.</p>\n</div></div></div><div id='property-target' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-property-target' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-property-target' class='name expandable'>target</a> : <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a><span class=\"signature\"></span></div><div class='description'><div class='short'><p><code>&lt;T&gt;</code> Target property.</p>\n</div><div class='long'><p><code>&lt;T&gt;</code> Target property.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/JW.Mapper-method-constructor' class='name expandable'>JW.Mapper</a>( <span class='pre'>source, config</span> ) : <a href=\"#!/api/JW.Mapper\" rel=\"JW.Mapper\" class=\"docClass\">JW.Mapper</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Array<div class='sub-desc'><p><code>&lt;<a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a>&gt;</code> Source properties.</p>\n</div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>Configuration (see Config options).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Mapper\" rel=\"JW.Mapper\" class=\"docClass\">JW.Mapper</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_super' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-_super' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-_super' class='name expandable'>_super</a>( <span class='pre'></span> ) : Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is available only inside class methods that were passed into JW.extend method. ...</div><div class='long'><p>This method is available only inside class methods that were passed into <a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a> method.\nThis method is an easy way of the same superclass method calling:</p>\n\n<pre><code>...\n// Class method\nmyMethod: function(a, b, c) {\n    return this.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>(a, b) + c;\n}\n...\n</code></pre>\n\n<p>Equivalent code without <a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a> usage:</p>\n\n<pre><code>...\n// Class method\nmyMethod: function(a, b, c) {\n    return MyClass.<a href=\"#!/api/JW.Class-static-property-superclass\" rel=\"JW.Class-static-property-superclass\" class=\"docClass\">superclass</a>.myMethod.call(this, a, b) + c;\n}\n...\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-bind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-method-bind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-method-bind' class='name expandable'>bind</a>( <span class='pre'>event</span> ) : <a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Watches specified event and triggers target value recalculation on\nthe event triggering. ...</div><div class='long'><p>Watches specified event and triggers target value recalculation on\nthe event triggering.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : <a href=\"#!/api/JW.Event\" rel=\"JW.Event\" class=\"docClass\">JW.Event</a><div class='sub-desc'><p>Event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Class destructor invocation method. ...</div><div class='long'><p>Class destructor invocation method. Destroys all aggregated objects and calls <a href=\"#!/api/JW.Class-method-destroyObject\" rel=\"JW.Class-method-destroyObject\" class=\"docClass\">destroyObject</a> method.\nYou must call this method explicitly from outside, because JavaScript doesn't support automatic class destructor\ncalling. Alternatively (and optimally), you should use method <a href=\"#!/api/JW.Class-method-own\" rel=\"JW.Class-method-own\" class=\"docClass\">own</a> to aggregate this object inside some another.</p>\n\n<pre><code>var object = new MyClass();\n\n// ...\n\n// Once object is not needed anymore, destroy it\nobject.<a href=\"#!/api/JW.Class-method-destroy\" rel=\"JW.Class-method-destroy\" class=\"docClass\">destroy</a>();\n</code></pre>\n\n<p>You can override this method in a subclass to do some preliminary work before aggregated objects destruction.\nFor example, <a href=\"#!/api/JW.UI.Component\" rel=\"JW.UI.Component\" class=\"docClass\">JW.UI.Component</a> overrides this method to remove child components before their destruction,\nbefore child components are usually aggregated inside the component.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroyObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-destroyObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-destroyObject' class='name expandable'>destroyObject</a>( <span class='pre'></span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Class destructor implementation. ...</div><div class='long'><p>Class destructor implementation. Called inside <a href=\"#!/api/JW.Class-method-destroy\" rel=\"JW.Class-method-destroy\" class=\"docClass\">destroy</a> method after aggregated objects destruction.\nThe logic of class instance destruction should be implemented here. If you override this method,\ndon't forget to call superclass destructor at the end of the method:</p>\n\n<pre><code>destroyObject: function() {\n    // Release resources\n    ...\n    // Call superclass destructor\n    this.<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a>();\n}\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-own' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/JW.Class' rel='JW.Class' class='defined-in docClass'>JW.Class</a><br/><a href='source/class.html#JW-Class-method-own' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-own' class='name expandable'>own</a>( <span class='pre'>obj</span> ) : <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Aggregate a specified object in a current one. ...</div><div class='long'><p>Aggregate a specified object in a current one. It means that the specified object will be destroyed automatically\non this object destruction. The aggregated objects are destroyed in a reversive order.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a><div class='sub-desc'><p>An aggregated object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a></span><div class='sub-desc'><p>An aggregated object (obj).</p>\n</div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-method-update' class='name expandable'>update</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates target property focibly. ...</div><div class='long'><p>Updates target property focibly.</p>\n</div></div></div><div id='method-watch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Mapper'>JW.Mapper</span><br/><a href='source/mapper8.html#JW-Mapper-method-watch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Mapper-method-watch' class='name expandable'>watch</a>( <span class='pre'>property</span> ) : <a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Watches specified property and triggers target value recalculation on\nthe property change. ...</div><div class='long'><p>Watches specified property and triggers target value recalculation on\nthe property change.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>property</span> : <a href=\"#!/api/JW.Property\" rel=\"JW.Property\" class=\"docClass\">JW.Property</a><div class='sub-desc'><p>Property.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/JW.Functor\" rel=\"JW.Functor\" class=\"docClass\">JW.Functor</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});