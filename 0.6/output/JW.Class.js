Ext.data.JsonP.JW_Class({"tagname":"class","name":"JW.Class","autodetected":{},"files":[{"filename":"class.js","href":"class.html#JW-Class"}],"members":[{"name":"_iid","tagname":"property","owner":"JW.Class","id":"property-_iid","meta":{}},{"name":"constructor","tagname":"property","owner":"JW.Class","id":"property-constructor","meta":{}},{"name":"_super","tagname":"property","owner":"JW.Class","id":"static-property-_super","meta":{"static":true}},{"name":"prototype","tagname":"property","owner":"JW.Class","id":"static-property-prototype","meta":{"static":true}},{"name":"superclass","tagname":"property","owner":"JW.Class","id":"static-property-superclass","meta":{"static":true}},{"name":"_super","tagname":"method","owner":"JW.Class","id":"method-_super","meta":{}},{"name":"destroy","tagname":"method","owner":"JW.Class","id":"method-destroy","meta":{}},{"name":"extend","tagname":"method","owner":"JW.Class","id":"static-method-extend","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-JW.Class","short_doc":"Самый базовый класс всех классов. ...","component":false,"superclasses":[],"subclasses":["JW.AbstractArray.IndexCount","JW.AbstractArray.IndexItems","JW.AbstractArray.Inserter","JW.AbstractArray.SpliceParams","JW.AbstractArray.SpliceResult","JW.AbstractCollection","JW.AbstractCollection.Indexer","JW.AbstractCollection.Lister","JW.AbstractCollection.Mapper","JW.AbstractCollection.Observer","JW.AbstractCollection.Orderer","JW.AbstractCollection.SorterComparing","JW.AbstractMap.Inserter","JW.AbstractMap.SpliceParams","JW.AbstractMap.SpliceResult","JW.AbstractSet.SpliceParams","JW.AbstractSet.SpliceResult","JW.Event","JW.EventAttachment","JW.EventParams","JW.Proxy"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Subclasses</h4><div class='dependency'><a href='#!/api/JW.AbstractArray.IndexCount' rel='JW.AbstractArray.IndexCount' class='docClass'>JW.AbstractArray.IndexCount</a></div><div class='dependency'><a href='#!/api/JW.AbstractArray.IndexItems' rel='JW.AbstractArray.IndexItems' class='docClass'>JW.AbstractArray.IndexItems</a></div><div class='dependency'><a href='#!/api/JW.AbstractArray.Inserter' rel='JW.AbstractArray.Inserter' class='docClass'>JW.AbstractArray.Inserter</a></div><div class='dependency'><a href='#!/api/JW.AbstractArray.SpliceParams' rel='JW.AbstractArray.SpliceParams' class='docClass'>JW.AbstractArray.SpliceParams</a></div><div class='dependency'><a href='#!/api/JW.AbstractArray.SpliceResult' rel='JW.AbstractArray.SpliceResult' class='docClass'>JW.AbstractArray.SpliceResult</a></div><div class='dependency'><a href='#!/api/JW.AbstractCollection' rel='JW.AbstractCollection' class='docClass'>JW.AbstractCollection</a></div><div class='dependency'><a href='#!/api/JW.AbstractCollection.Indexer' rel='JW.AbstractCollection.Indexer' class='docClass'>JW.AbstractCollection.Indexer</a></div><div class='dependency'><a href='#!/api/JW.AbstractCollection.Lister' rel='JW.AbstractCollection.Lister' class='docClass'>JW.AbstractCollection.Lister</a></div><div class='dependency'><a href='#!/api/JW.AbstractCollection.Mapper' rel='JW.AbstractCollection.Mapper' class='docClass'>JW.AbstractCollection.Mapper</a></div><div class='dependency'><a href='#!/api/JW.AbstractCollection.Observer' rel='JW.AbstractCollection.Observer' class='docClass'>JW.AbstractCollection.Observer</a></div><div class='dependency'><a href='#!/api/JW.AbstractCollection.Orderer' rel='JW.AbstractCollection.Orderer' class='docClass'>JW.AbstractCollection.Orderer</a></div><div class='dependency'><a href='#!/api/JW.AbstractCollection.SorterComparing' rel='JW.AbstractCollection.SorterComparing' class='docClass'>JW.AbstractCollection.SorterComparing</a></div><div class='dependency'><a href='#!/api/JW.AbstractMap.Inserter' rel='JW.AbstractMap.Inserter' class='docClass'>JW.AbstractMap.Inserter</a></div><div class='dependency'><a href='#!/api/JW.AbstractMap.SpliceParams' rel='JW.AbstractMap.SpliceParams' class='docClass'>JW.AbstractMap.SpliceParams</a></div><div class='dependency'><a href='#!/api/JW.AbstractMap.SpliceResult' rel='JW.AbstractMap.SpliceResult' class='docClass'>JW.AbstractMap.SpliceResult</a></div><div class='dependency'><a href='#!/api/JW.AbstractSet.SpliceParams' rel='JW.AbstractSet.SpliceParams' class='docClass'>JW.AbstractSet.SpliceParams</a></div><div class='dependency'><a href='#!/api/JW.AbstractSet.SpliceResult' rel='JW.AbstractSet.SpliceResult' class='docClass'>JW.AbstractSet.SpliceResult</a></div><div class='dependency'><a href='#!/api/JW.Event' rel='JW.Event' class='docClass'>JW.Event</a></div><div class='dependency'><a href='#!/api/JW.EventAttachment' rel='JW.EventAttachment' class='docClass'>JW.EventAttachment</a></div><div class='dependency'><a href='#!/api/JW.EventParams' rel='JW.EventParams' class='docClass'>JW.EventParams</a></div><div class='dependency'><a href='#!/api/JW.Proxy' rel='JW.Proxy' class='docClass'>JW.Proxy</a></div><h4>Files</h4><div class='dependency'><a href='source/class.html#JW-Class' target='_blank'>class.js</a></div></pre><div class='doc-contents'><p>Самый базовый класс всех классов. От <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> и всех его потомков можно наследовать новые классы.</p>\n\n<p>Пример наследования класса:</p>\n\n<pre><code>// Конструктор\nvar Shape = function(name) {\n    // Вызываем конструктор базового класса\n    Shape._super.call(this);\n    // Объявляем поля\n    this.name = name;\n};\n\n// Наследуем Shape от <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a>\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(Shape, <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a>, {\n    // Для удобства рекомендуется дать спецификацию класса в комментарии\n    // String name;\n    // abstract Number getArea();\n});\n\n// --------\n\nvar Rectangle = function(name, width, height) {\n    Rectangle._super.call(this, name);\n    this.width = width;\n    this.height = height;\n    // Для оптимизации рекомендуется объявлять даже те поля,\n    // которые не имеют значения по умолчанию\n    this.el = null;\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(Rectangle, Shape, {\n    // Number width;\n    // Number height;\n    // Element el;\n\n    // Деструктор\n    destroy: function() {\n        // Освобождаем ресурсы\n        if (this.el) {\n            this.el.remove();\n        }\n        // Вызываем деструктор базового класса\n        this._super();\n    },\n\n    // override\n    getArea: function() {\n        return this.width * this.height;\n    },\n\n    getElement: function() {\n        if (!this.el) {\n            this.el = jQuery('&amp;lt;div /&amp;gt;');\n            this.el.width(width);\n            this.el.height(height);\n        }\n        return this.el;\n    }\n});\n</code></pre>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance properties</h3><div id='property-_iid' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Class'>JW.Class</span><br/><a href='source/class.html#JW-Class-property-_iid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-_iid' class='name expandable'>_iid</a> : number<span class=\"signature\"></span></div><div class='description'><div class='short'>Instance ID. ...</div><div class='long'><p>Instance ID.</p>\n\n<p>Автоинкрементный уникальный идентификатор объекта. Каждый экземпляр <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> получает такой идентификатор.\nИспользуется в множестве <a href=\"#!/api/JW.AbstractSet\" rel=\"JW.AbstractSet\" class=\"docClass\">JW.AbstractSet</a> в качестве ключа словаря для быстрого поиска.</p>\n</div></div></div><div id='property-constructor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Class'>JW.Class</span><br/><a href='source/class.html#JW-Class-property-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-property-constructor' class='name expandable'>constructor</a> : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Конструктор как класс. ...</div><div class='long'><p>Конструктор как класс. Если в вашем распоряжении есть некоторый объект, то вы с легкостью можете узнать его класс\nвоспользовавшись полем <a href=\"#!/api/JW.Class-property-constructor\" rel=\"JW.Class-property-constructor\" class=\"docClass\">constructor</a>.</p>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static properties</h3><div id='static-property-_super' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Class'>JW.Class</span><br/><a href='source/class.html#JW-Class-static-property-_super' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-static-property-_super' class='name expandable'>_super</a> : Function<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Базовый класс. ...</div><div class='long'><p>Базовый класс. Благодаря этому полю, можно вызывать конструктор базового класса:</p>\n\n<pre><code>var MyClass = function() {\n    MyClass._super.call(this);\n};\n\n<a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>(MyClass, <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a>);\n</code></pre>\n\n<p>Это статическое поле есть у <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> и всех классов, унаследованных от него.</p>\n</div></div></div><div id='static-property-prototype' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Class'>JW.Class</span><br/><a href='source/class.html#JW-Class-static-property-prototype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-static-property-prototype' class='name expandable'>prototype</a> : Object<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'><p>Прототип класса.</p>\n</div><div class='long'><p>Прототип класса.</p>\n</div></div></div><div id='static-property-superclass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Class'>JW.Class</span><br/><a href='source/class.html#JW-Class-static-property-superclass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-static-property-superclass' class='name expandable'>superclass</a> : Object<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Прототип базового класса. ...</div><div class='long'><p>Прототип базового класса. Благодаря этому полю, можно подниматься вверх по иерархии классов:</p>\n\n<pre><code>this.constructor.superclass.constructor.superclass....\n</code></pre>\n\n<p>Это статическое поле есть у <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> и всех классов, унаследованных от него.</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-_super' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Class'>JW.Class</span><br/><a href='source/class.html#JW-Class-method-_super' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-_super' class='name expandable'>_super</a>( <span class='pre'></span> ) : Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>Этот метод доступен только внутри методов класса, переданных в функцию JW.extend при создании данного класса. ...</div><div class='long'><p>Этот метод доступен только внутри методов класса, переданных в функцию <a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a> при создании данного класса. Метод\n<a href=\"#!/api/JW.Class-method-_super\" rel=\"JW.Class-method-_super\" class=\"docClass\">_super</a> - это простой способ вызова того же метода базового класса:</p>\n\n<pre><code>...\n// Метод класса\nmyMethod: function(a, b, c) {\n    return this._super(a, b) + c;\n}\n...\n</code></pre>\n\n<p>Эквивалентный вариант:</p>\n\n<pre><code>...\n// Метод класса\nmyMethod: function(a, b, c) {\n    return MyClass.superclass.myMethod.call(this, a, b) + c;\n}\n...\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Class'>JW.Class</span><br/><a href='source/class.html#JW-Class-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> ) : void<span class=\"signature\"></span></div><div class='description'><div class='short'>Деструктор класса. ...</div><div class='long'><p>Деструктор класса. Сюда рекомендуется помещать всю логику уничтожения экземпляра класса. Этот метод нужно явно\nвызывать снаружи, поскольку JavaScript не поддерживает автоматические деструкторы классов. Этот метод можно\nперегружать, не забывая вызывать деструктор базового класса:</p>\n\n<pre><code>destroy: function() {\n    // Освобождаем ресурсы\n    ...\n    // Вызываем деструктор базового класса\n    this._super();\n}\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-extend' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JW.Class'>JW.Class</span><br/><a href='source/class.html#JW-Class-static-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JW.Class-static-method-extend' class='name expandable'>extend</a>( <span class='pre'>body</span> ) : Function<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Создает новый класс и наследует его от текущего класса. ...</div><div class='long'><p>Создает новый класс и наследует его от текущего класса. Тело класса передается в аргументе body - все поля и методы\nbody станут полями и методами нового класса. Содержимое body в несколько преобразованном виде переходит в прототип\nнового класса.</p>\n\n<p>Конструктор остается таким же, как и у базового класса.</p>\n\n<p>В случае, если конструктор нужно изменить, следует воспользоваться методом <a href=\"#!/api/JW-static-method-extend\" rel=\"JW-static-method-extend\" class=\"docClass\">JW.extend</a>.</p>\n\n<p>Пример наследования класса:</p>\n\n<pre><code>var MyClass = <a href=\"#!/api/JW.Class-static-method-extend\" rel=\"JW.Class-static-method-extend\" class=\"docClass\">JW.Class.extend</a>({\n    // Метод\n    myMethod: function(x) {\n        return this._super(x + 10);\n    }\n});\n</code></pre>\n\n<p>Этот статический метод есть у <a href=\"#!/api/JW.Class\" rel=\"JW.Class\" class=\"docClass\">JW.Class</a> и всех классов, унаследованных от него.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>body</span> : Object<div class='sub-desc'><p>Тело класса. По умолчанию - пустой объект (создает новый класс и наследует от текущего класса, без добавления полей\nи методов).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>Новый унаследованный класс</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});